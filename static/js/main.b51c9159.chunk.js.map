{"version":3,"sources":["tapis-ui/_common/SectionContent/SectionContent.module.css","tapis-ui/_common/ReadMore/ReadMore.module.scss","tapis-ui/_wrappers/SubmitWrapper/SubmitWrapper.module.scss","tapis-app/Layout/Layout.module.scss","tapis-ui/_common/Section/SectionMessages.module.css","tapis-ui/_common/SectionContent/SectionContent.layouts.module.css","tapis-ui/_common/DropdownSelector/DropdownSelector.module.css","tapis-ui/_common/Pill/Pill.module.scss","tapis-ui/components/files/FileListing/FileListing.module.scss","tapis-app/Sidebar/Sidebar.module.scss","tapis-app/UIPatterns/UIPatternsReadMore/UIPatternsReadMore.module.scss","tapis-app/UIPatterns/UIPatterns.module.scss","tapis-ui/_common/Message/Message.module.scss","tapis-app/Sections/Dashboard/Dashboard.module.scss","tapis-api/utils/apiGenerator.ts","tapis-api/utils/errorDecoder.ts","tapis-api/apps/list.ts","tapis-api/apps/detail.ts","tapis-hooks/context/TapisContext.tsx","tapis-hooks/context/useTapisConfig.ts","tapis-hooks/provider/index.ts","tapis-hooks/provider/TapisProvider.tsx","tapis-hooks/apps/queryKeys.ts","tapis-hooks/apps/useList.ts","tapis-hooks/apps/useDetail.ts","tapis-ui/_common/LoadingSpinner/LoadingSpinner.js","tapis-ui/_common/LoadingSpinner/index.js","tapis-ui/_constants/welcomeMessages.js","tapis-ui/_common/Section/SectionMessages.js","tapis-ui/_common/SectionContent/SectionContent.js","tapis-ui/_common/Section/Section.js","tapis-ui/_common/SectionHeader/SectionHeader.js","tapis-ui/_common/Form/FileInputDropZone.js","tapis-ui/_common/Form/FileInputDropZoneFormField.js","tapis-ui/_common/Form/FormField.js","tapis-ui/_common/InfiniteScrollTable/InfiniteScrollTable.js","tapis-ui/_common/Icon/Icon.js","tapis-ui/_common/Icon/index.js","tapis-ui/_common/Expand/Expand.js","tapis-ui/_common/Message/Message.js","tapis-ui/_common/Message/index.js","tapis-ui/_common/InlineMessage/InlineMessage.js","tapis-ui/_common/InlineMessage/index.js","tapis-ui/_common/SectionMessage/SectionMessage.js","tapis-ui/_common/SectionMessage/index.js","tapis-ui/_common/DescriptionList/DescriptionList.js","tapis-ui/_common/DescriptionList/index.js","tapis-ui/_common/DropdownSelector/DropdownSelector.js","tapis-ui/_common/DropdownSelector/index.js","tapis-ui/_common/WelcomeMessage/WelcomeMessage.js","tapis-ui/_common/Pill/Pill.js","tapis-ui/_common/Pill/index.js","tapis-ui/_common/TextCopyField/TextCopyField.js","tapis-ui/_common/ReadMore/ReadMore.js","tapis-ui/_common/ReadMore/index.js","tapis-ui/_common/Paginator/Paginator.js","tapis-ui/_common/ProtectedRoute/ProtectedRoute.tsx","tapis-ui/_common/ProtectedRoute/index.ts","tapis-ui/_common/FieldWrapper/index.ts","tapis-ui/_common/FieldWrapper/FieldWrapper.tsx","tapis-ui/_wrappers/Navbar/Navbar.tsx","tapis-ui/_wrappers/QueryWrapper/index.ts","tapis-ui/_wrappers/QueryWrapper/QueryWrapper.tsx","tapis-ui/_wrappers/SubmitWrapper/index.ts","tapis-ui/_wrappers/SubmitWrapper/SubmitWrapper.tsx","tapis-ui/components/apps/AppsNav/index.ts","tapis-ui/components/apps/AppsNav/AppsNav.tsx","tapis-api/jobs/list.ts","tapis-api/jobs/details.ts","tapis-api/jobs/submit.ts","tapis-hooks/jobs/queryKeys.ts","tapis-hooks/jobs/useList.ts","tapis-hooks/jobs/useDetails.ts","tapis-hooks/jobs/useSubmit.ts","tapis-ui/components/jobs/JobsNav/index.ts","tapis-ui/components/jobs/JobsNav/JobsNav.tsx","tapis-api/systems/list.ts","tapis-hooks/systems/queryKeys.ts","tapis-hooks/systems/useList.ts","tapis-ui/components/jobs/JobLauncher/index.ts","tapis-ui/components/jobs/JobLauncher/JobLauncher.tsx","tapis-ui/components/jobs/JobDetail/index.ts","tapis-ui/components/jobs/JobDetail/JobDetail.tsx","tapis-app/Sections/Apps/JobLauncher/JobLauncher.tsx","tapis-app/Layout/Layout.tsx","tapis-app/Sections/Section/Section.tsx","tapis-app/Sections/Apps/index.ts","tapis-app/Sections/Apps/Apps.tsx","tapis-app/Sections/Dashboard/Dashboard.tsx","tapis-app/Sections/Dashboard/index.tsx","tapis-app/Sections/Jobs/index.ts","tapis-app/Sections/Jobs/Jobs.tsx","tapis-api/authenticator/login.ts","tapis-hooks/authenticator/queryKeys.ts","tapis-hooks/authenticator/useLogin.ts","tapis-ui/components/authenticator/Login/index.ts","tapis-ui/components/authenticator/Login/Login.tsx","tapis-app/Sections/Login/index.ts","tapis-app/Sections/Login/Login.tsx","tapis-ui/components/systems/SystemsNav/index.ts","tapis-ui/components/systems/SystemsNav/SystemsNav.tsx","tapis-api/files/list.ts","tapis-hooks/files/queryKeys.ts","tapis-hooks/files/useList.ts","tapis-hooks/utils/infiniteQuery.ts","tapis-ui/components/files/FileListing/FileListing.tsx","tapis-ui/components/files/FileListing/index.ts","tapis-app/Sections/Systems/index.ts","tapis-app/Sections/Systems/Systems.tsx","tapis-app/Sidebar/Sidebar.tsx","tapis-app/UIPatterns/UIPatternsMessage/UIPatternsMessage.js","tapis-app/UIPatterns/UIPatternsDescriptionList/UIPatternsDescriptionList.js","tapis-app/UIPatterns/UIPatternsDropdownSelector/UIPatternsDropdownSelector.js","tapis-app/UIPatterns/UIPatternsPill/UIPatternsPill.js","tapis-app/UIPatterns/UIPatternsReadMore/UIPatternsReadMore.js","tapis-app/UIPatterns/UIPatterns.js","tapis-app/App/index.ts","tapis-app/App/App.tsx","reportWebVitals.ts","index.tsx","tapis-ui/_common/Paginator/Paginator.module.scss","tapis-ui/_common/TextCopyField/TextCopyField.module.scss","tapis-ui/_wrappers/Navbar/Navbar.module.scss","tapis-app/UIPatterns/UIPatternsMessage/UIPatternsMessage.module.scss","tapis-app/UIPatterns/UIPatternsDescriptionList/UIPatternsDescriptionList.module.css","tapis-ui/_common/Section/Section.module.css","tapis-ui/_common/SectionHeader/SectionHeader.module.css","tapis-ui/_common/DescriptionList/DescriptionList.module.scss","tapis-app/Sections/Section/Section.module.scss","tapis-ui/_common/Expand/Expand.module.scss"],"names":["module","exports","apiGenerator","api","basePath","jwt","headers","Configuration","errorDecoder","func","a","result","json","list","params","Apps","ApplicationsApi","getApps","detail","getApp","authContext","TapisContext","React","createContext","useTapisConfig","useContext","getAccessToken","cookie","Cookies","get","JSON","parse","useQuery","initialData","data","refetch","accessToken","setAccessToken","resp","remove","expires","Date","expires_at","set","stringify","TapisProvider","token","children","contextValue","queryClient","QueryClient","Provider","value","QueryClientProvider","client","QueryKeys","defaultParams","select","useList","access_token","enabled","useDetail","LoadingSpinner","placement","className","Spinner","defaultProps","DASHBOARD","DATA","ALLOCATIONS","APPLICATIONS","HISTORY","ACCOUNT","TICKETS","UI","SectionMessages","routeName","welcomeMessageText","welcomeText","MESSAGES","welcomeMessageName","welcomeMessage","messageName","hasMessage","useShouldShowWelcomeMessage","length","hasMessageClass","useEffect","document","body","classList","add","styles","root","LAYOUT_CLASS_MAP","oneRow","oneColumn","twoColumn","Object","keys","SectionContent","styleName","layoutName","shouldScroll","shouldDebugLayout","tagName","styleNameList","layoutClass","TagName","push","layoutStyles","join","Section","bodyClassName","content","contentClassName","contentLayoutName","contentShouldScroll","header","headerActions","headerClassName","manualContent","manualHeader","messages","messagesClassName","shouldBuildHeader","Error","actions","undefined","SectionHeader","isForForm","isForTable","HeadingTagName","heading","RejectedFileMessage","numberOfFiles","FileInputDropZone","files","onSetFiles","onRejectedFiles","maxSize","maxSizeMessage","onRemoveFile","isSubmitted","useState","numberRejectedFiles","setNumberRejectedFiles","useDropzone","noClick","onDrop","accepted","onDropRejected","rejected","getRootProps","open","getInputProps","showFileList","Button","outline","onClick","map","f","i","name","color","fileIndex","toString","FileInputDropZoneFormField","id","description","useField","field","helpers","FormGroup","Label","for","size","style","display","alignItems","acceptedFiles","setValue","splice","FormText","Infinity","FormFieldWrapper","wrapper","type","InputGroup","FormField","addon","addonType","label","required","agaveFile","SelectModal","props","meta","openAgaveFileModal","setOpenAgaveFileModal","hasAddon","wrapperType","FieldLabel","Badge","marginLeft","FieldNote","touched","error","isOpen","toggle","prevState","onSelect","system","path","InputGroupAddon","Input","bsSize","InfiniteScrollLoadingRow","isLoading","InfiniteScrollNoDataRow","noDataText","InfiniteScrollTable","tableColumns","tableData","onInfiniteScroll","getRowProps","columnMemoProps","columns","useMemo","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","onScroll","target","scrollHeight","scrollTop","clientHeight","row","cells","cell","getCellProps","offset","Icon","iconClassName","fullClassName","role","Expand","message","setIsOpen","toggleCallback","useCallback","Card","container","CardHeader","summary","tag","Collapse","CardBody","ERROR_TEXT","TYPE_MAP","info","iconName","iconText","success","warning","warn","SCOPE_MAP","inline","section","Message","onDismiss","canDismiss","isVisible","scope","typeMap","scopeMap","typeClassName","scopeClassName","hasDismissSupport","console","modifierClassNames","containerStyleNames","fadeProps","Fade","unmountOnExit","baseClass","timeout","in","text","icon","InlineMessage","messageProps","SectionMessage","setIsVisible","DIRECTION_CLASS_MAP","vertical","horizontal","DEFAULT_DIRECTION","DENSITY_CLASS_MAP","compact","default","DEFAULT_DENSITY","DescriptionList","density","direction","modifierClasses","entries","key","Fragment","Array","isArray","val","uuidv4","DropdownSelector","onChange","canSelectMany","multiple","useShouldShowMessage","welcomeMessages","WelcomeMessage","shouldShow","Alert","Pill","shouldTruncate","pillStyleName","TextCopyField","placeholder","isCopied","setIsCopied","onCopy","setTimeout","clearTimeout","stateTimeout","transitionDuration","isEmpty","disabled","event","preventDefault","input","readOnly","ReadMore","expanded","setExpanded","useResizeDetector","height","ref","hasOverflow","current","clamped","PaginatorPage","number","callback","page","Paginator","start","end","pages","spread","delta","Math","floor","middle","middlePages","fill","_","index","endcap","ProtectedRoute","rest","location","to","pathname","state","from","FieldWrapper","Children","child","isValidElement","cloneElement","NavItem","activeClassName","exact","Navbar","QueryWrapper","SubmitWrapper","AppsNav","url","useRouteMatch","appList","app","version","Jobs","JobsApi","getJobList","details","getJob","submit","request","submitJob","reqSubmitJob","orderBy","useDetails","jobUuid","useSubmit","appId","appVersion","useMutation","mutate","isError","isSuccess","reset","JobsNav","jobsList","job","uuid","status","Systems","SystemsApi","getSystems","JobLauncher","execSystemId","systemsListHook","systems","initialValues","ReqSubmitJobFromJSON","jobFields","enableReinitialize","validationSchema","Yup","values","onSubmit","setSubmitting","isSubmitting","JobDetail","JobLauncherWrapper","appData","useAppDetail","appDetails","jobAttributes","toISOString","slice","Layout","left","right","top","bottom","SectionNavWrapper","nav","SectionBody","subHeader","sidebar","flex","match","DashboardCard","link","counter","loading","card","CardTitle","CardText","CardFooter","Dashboard","useSystemsList","jobs","useJobsList","apps","useAppsList","process","REACT_APP_TAPIS_TENANT_URL","cards","login","username","password","reqCreateToken","grant_type","Authenticator","TokensApi","createToken","useLogin","onSuccess","response","logout","Login","min","SystemsNav","definitions","host","Files","FileOperationsApi","listFiles","limit","useInfiniteQuery","systemId","pageParam","getNextPageParam","lastPage","allPages","tapisNextPageParam","concatenatedResults","reduce","accumulator","concat","FileListingItem","file","FileListing","hasNextPage","fetchNextPage","fileSelectCallback","Sidebar","EXAMPLE_LINK","short","href","window","e","long","EXAMPLE_TEXT","NOTIFICATION_TEXT","rel","UIPatternsMessages","secondary","rowSpan","Username","Prefix","Name","Suffix","UIPatternsDropdownSelector","UIPatternsPill","UIPatternsReadMore","UIPatterns","items","UIPatternsMessage","UIPatternsDescriptionList","App","hot","workbenchContent","flexGrow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b51c9159.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SectionContent_root__1FxyJ\",\"should-scroll\":\"SectionContent_should-scroll__3dKfI\",\"should-debug-layout\":\"SectionContent_should-debug-layout__LG4ti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clamped\":\"ReadMore_clamped__1L0vp\",\"expanded\":\"ReadMore_expanded__3Wo7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SubmitWrapper_wrapper__3HLGZ\",\"loading-spinner\":\"SubmitWrapper_loading-spinner__24zAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout-root\":\"Layout_layout-root__2AbFf\",\"layout-row\":\"Layout_layout-row__2znhu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SectionMessages_root__31Az9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"one-row\":\"SectionContent_layouts_one-row__2bgYF\",\"one-column\":\"SectionContent_layouts_one-column__1WdLz\",\"two-column\":\"SectionContent_layouts_two-column__3n1EU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DropdownSelector_container___L3s8 bootstrap_form_form-control__3JyGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Pill_root__20jYh\",\"should-truncate\":\"Pill_should-truncate__3G_4O\",\"is-danger\":\"Pill_is-danger__RWDLI\",\"is-success\":\"Pill_is-success__3i8Z2\",\"is-warning\":\"Pill_is-warning__2ghgs\",\"is-normal\":\"Pill_is-normal__3e2Uh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-list\":\"FileListing_file-list__3wKB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Sidebar_root__1BsA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UIPatternsReadMore_root__1rUhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UIPatterns_container__1wOgY\",\"header\":\"UIPatterns_header__2GSY0\",\"grid-item\":\"UIPatterns_grid-item__1IjYy\",\"items\":\"UIPatterns_items__1Szqz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__PHGJX\",\"is-scope-inline\":\"Message_is-scope-inline__2uX3B\",\"is-scope-section\":\"Message_is-scope-section__2DGew\",\"text\":\"Message_text__11RO7\",\"type-icon\":\"Message_type-icon__26GVH\",\"close-button\":\"Message_close-button__22u4_\",\"is-info\":\"Message_is-info__3EBl2\",\"icon\":\"Message_icon__1I81B\",\"is-warn\":\"Message_is-warn__2B5bs\",\"is-error\":\"Message_is-error__ILOSU\",\"is-success\":\"Message_is-success__xT7pL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Dashboard_cards__qdgrk\",\"card\":\"Dashboard_card__3YKuM\",\"card-header\":\"Dashboard_card-header__ZGUC0\",\"card-footer\":\"Dashboard_card-footer__2L7RJ\",\"header\":\"Dashboard_header__u_gmf\"};","type BaseApiClass = {\n  new (...args: any[]): any;\n};\n\ntype ApiModule = {\n  Configuration: {\n    new (...args: any[]): any;\n  };\n};\n\nconst apiGenerator = <T extends unknown>(\n  module: ApiModule,\n  api: BaseApiClass,\n  basePath: string,\n  jwt: string | null\n): T => {\n  const headers: any = {};\n  if (jwt) {\n    headers['X-Tapis-Token'] = jwt;\n  }\n\n  // Generate a configuration object for the module with the\n  // API URL and the authorization header\n  const configuration = new module.Configuration({\n    basePath,\n    headers,\n  });\n\n  // Create an instance of the API\n  const result: T = new api(configuration);\n  return result;\n};\n\nexport default apiGenerator;\n","const errorDecoder = async <T>(func: () => Promise<T>) => {\n  try {\n    // Call the specified function name, and expect that specific return type\n    const result: T = await func();\n    return result;\n  } catch (error) {\n    // If an exception occurred, try to decode the json response from it and\n    // rethrow it\n    if (error.json) {\n      const decoded = await error.json();\n      throw decoded;\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport default errorDecoder;\n","import { Apps } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (params: Apps.GetAppsRequest, basePath: string, jwt: string) => {\n  const api: Apps.ApplicationsApi = apiGenerator<Apps.ApplicationsApi>(\n    Apps,\n    Apps.ApplicationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Apps.RespApps>(() => api.getApps(params));\n};\n\nexport default list;\n","import { Apps } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst detail = (params: Apps.GetAppRequest, basePath: string, jwt: string) => {\n  const api: Apps.ApplicationsApi = apiGenerator<Apps.ApplicationsApi>(\n    Apps,\n    Apps.ApplicationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Apps.RespApp>(() => api.getApp(params));\n};\n\nexport default detail;\n","import React from 'react';\n\nexport type TapisContextType = {\n  basePath: string;\n};\n\nexport const authContext: TapisContextType = {\n  basePath: '',\n};\n\nconst TapisContext: React.Context<TapisContextType> =\n  React.createContext<TapisContextType>(authContext);\n\nexport default TapisContext;\n","import { useContext } from 'react';\nimport { useQuery } from 'react-query';\nimport Cookies from 'js-cookie';\nimport { Authenticator } from '@tapis/tapis-typescript';\nimport TapisContext from './TapisContext';\n\nconst useTapisConfig = () => {\n  const { basePath } = useContext(TapisContext);\n\n  const getAccessToken = ():\n    | Authenticator.NewAccessTokenResponse\n    | undefined => {\n    const cookie = Cookies.get('tapis-token');\n    if (!!cookie) return JSON.parse(cookie);\n    return undefined;\n  };\n\n  const { data, refetch } = useQuery<\n    Authenticator.NewAccessTokenResponse | undefined\n  >('tapis-token', getAccessToken, {\n    initialData: () => getAccessToken(),\n  });\n\n  const setAccessToken = async (\n    resp: Authenticator.NewAccessTokenResponse | null | undefined\n  ): Promise<void> => {\n    if (!resp) {\n      Cookies.remove('tapis-token');\n      await refetch();\n      return;\n    }\n    const expires = new Date(resp.expires_at ?? 0);\n    Cookies.set('tapis-token', JSON.stringify(resp), { expires });\n    await refetch();\n  };\n\n  return {\n    basePath,\n    accessToken: data,\n    setAccessToken,\n  };\n};\n\nexport default useTapisConfig;\n","import { default as TapisProvider } from './TapisProvider';\n\nexport default TapisProvider;\n","import React from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Authenticator } from '@tapis/tapis-typescript';\nimport TapisContext, { TapisContextType } from '../context/TapisContext';\n\ninterface TapisProviderProps {\n  token?: Authenticator.NewAccessTokenResponse;\n  basePath: string;\n}\n\nconst TapisProvider: React.FC<React.PropsWithChildren<TapisProviderProps>> = ({\n  token,\n  basePath,\n  children,\n}) => {\n  // Provide a context state for the rest of the application, including\n  // a way of modifying the state\n  const contextValue: TapisContextType = {\n    basePath,\n  };\n\n  // react-query client\n  const queryClient = new QueryClient();\n\n  return (\n    <TapisContext.Provider value={contextValue}>\n      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n    </TapisContext.Provider>\n  );\n};\n\nexport default TapisProvider;\n","const QueryKeys = {\n  list: 'apps/list',\n};\n\nexport default QueryKeys;\n","import { useQuery } from 'react-query';\nimport { list } from 'tapis-api/apps';\nimport { Apps } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Apps.GetAppsRequest = {\n  select: 'jobAttributes,version',\n};\n\nconst useList = (params: Apps.GetAppsRequest = defaultParams) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Apps.RespApps, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token ?? ''),\n    {\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import { useQuery } from 'react-query';\nimport { detail } from 'tapis-api/apps';\nimport { Apps } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Apps.GetAppsRequest = {\n  select: 'jobAttributes,version',\n};\n\nconst useDetail = (params: Apps.GetAppRequest) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Apps.RespApp, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => detail({ ...params }, basePath, accessToken?.access_token ?? ''),\n    {\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useDetail;\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport './LoadingSpinner.scss';\n\nconst LoadingSpinner = ({ placement, className }) => {\n  return (\n    <div className={`loading-icon ${className}`} data-testid=\"loading-spinner\">\n      <Spinner className={placement} />\n    </div>\n  );\n};\nLoadingSpinner.propTypes = {\n  placement: PropTypes.string,\n  className: PropTypes.string,\n};\nLoadingSpinner.defaultProps = {\n  placement: 'section',\n  className: '',\n};\n\nexport default LoadingSpinner;\n","import LoadingSpinner from './LoadingSpinner';\n\nexport default LoadingSpinner;\n","/**\n * Standard welcome message texts\n *\n * Notes:\n * - Each of these is expected-not-required to match a route from `./routes.js`.\n * - To customize message text (example: dynamic content) use `<Section>` props.\n */\nexport const DASHBOARD =\n  'This page allows you to monitor your job status, get help with tickets, and view the status of the High Performance Computing (HPC) systems.';\nexport const DATA = 'This page allows you to upload and manage your files.';\nexport const ALLOCATIONS =\n  'This page allows you to monitor the status of allocations on the HPC systems and view a breakdown of team usage.';\nexport const APPLICATIONS =\n  'This page allows you to submit jobs to the HPC systems or access Cloud services using a variety of applications.';\nexport const HISTORY =\n  'This page allows you to monitor a log of all previous job submissions.';\nexport const ACCOUNT =\n  'This page allows you to manage your account profile, change your password and view software licenses.';\nexport const TICKETS =\n  'This page allows you to submit a help request via an RT Ticket.';\nexport const UI =\n  'This hidden page allows developers to review UI components in isolation.';\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  WelcomeMessage,\n  useShouldShowMessage as useShouldShowWelcomeMessage,\n} from '..';\nimport * as MESSAGES from '../../_constants/welcomeMessages';\n\nimport styles from './SectionMessages.module.css';\nimport './SectionMessages.css';\n\n/**\n * A list for section messages that supports:\n *\n * - manual messages\n * - manual welcome message\n * - automatic welcome message\n * - automatic welcome message with custom text\n *\n * @example\n * // an automatic welcome message (if found), no additional messages\n * <SectionMessages routeName=\"DASHBOARD\" />\n * @example\n * // overwrite text of an automatic welcome message, no additional messages\n * <SectionMessages\n *   routeName=\"DASHBOARD\"\n *   welcomeText={`We welcome you to the dashboard, ${givenName}`} />\n * @example\n * // define text for a manual welcome message, no additional messages\n * <SectionMessages welcomeText={`We welcome you to this page, ${givenName}`} />\n * @example\n * // an automatic welcome message (if found), some additional messages\n * <SectionMessages routeName=\"DASHBOARD\">\n *   <Alert color=\"success\">You win!</Alert>\n *   <Alert color=\"secondary\">\n *     <button>Claim your prize.</button>\n *   </Alert>\n * </SectionMessages>\n * @example\n * // no automatic welcome message, some additional messages\n * <SectionMessages>\n *   <Alert color=\"success\">You win!</Alert>\n *   <Alert color=\"secondary\">\n *     <button>Claim your prize.</button>\n *   </Alert>\n * </SectionMessages>\n */\nfunction SectionMessages({ children, className, routeName, welcomeText }) {\n  const welcomeMessageText = welcomeText || MESSAGES[routeName];\n  /* FAQ: An alternate message name allows tracking custom message dismissal */\n  const welcomeMessageName = routeName || welcomeMessageText;\n  const welcomeMessage = welcomeMessageText && (\n    <WelcomeMessage messageName={welcomeMessageName}>\n      {welcomeMessageText}\n    </WelcomeMessage>\n  );\n  const hasMessage =\n    useShouldShowWelcomeMessage(routeName) || children.length > 0;\n  const hasMessageClass = 'has-message';\n\n  useEffect(() => {\n    if (hasMessage) {\n      document.body.classList.add(hasMessageClass);\n    } else {\n      document.body.classList.remove(hasMessageClass);\n    }\n  }, [hasMessage]);\n\n  return (\n    <aside className={`${styles.root} ${className}`}>\n      {welcomeMessage}\n      {children}\n    </aside>\n  );\n}\nSectionMessages.propTypes = {\n  /** Component-based message(s) (e.g. <Alert>, <Message>) (welcome message found automatically, given `routeName`) */\n  children: PropTypes.node,\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** The name of the route section (to search for required welcome message) */\n  routeName: PropTypes.string,\n  /** Custom welcome text (can overwrite `routeName`-based welcome message) */\n  welcomeText: PropTypes.string,\n};\nSectionMessages.defaultProps = {\n  children: '',\n  className: '',\n  routeName: '',\n  welcomeText: '',\n};\n\nexport default SectionMessages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* eslint-disable no-unused-vars */\nimport styles from './SectionContent.module.css';\nimport layoutStyles from './SectionContent.layouts.module.css';\n/* eslint-enable no-unused-vars */\n\n/**\n * Map of layout names to CSS classes\n * @enum {number}\n */\nexport const LAYOUT_CLASS_MAP = {\n  /** One full-height row of flexible blocks */\n  oneRow: 'one-row',\n  /** One full-width column of flexible blocks */\n  oneColumn: 'one-column',\n  /**\n   * Two left/right columns (wide/narrow) of flexible blocks\n   *\n   * (On narrow screens, this behaves like `oneColumn`)\n   */\n  twoColumn: 'two-column',\n};\nexport const DEFAULT_LAYOUT = 'oneRow';\nexport const LAYOUTS = [...Object.keys(LAYOUT_CLASS_MAP)];\n\n/**\n * A content panel wrapper that supports:\n *\n * - lay out panels (based on layout name and panel position)\n * - change element tag (like `section` instead of `div`)\n * - scroll root element (overflow of panel content is not managed)\n * - debug layout (via color-coded panels)\n *\n * @example\n * // features: lay out panels, change tag, allow content scroll, color-coded\n * <SectionContent\n *   layoutName=\"oneColumn\"\n *   tagName=\"main\",\n *   shouldScroll,\n *   shouldDebugLayout\n * >\n *   <div>Thing 1</div>\n *   <div>Thing 2</div>\n *   <div>Thing 3</div>\n * </SectionContent>\n */\nfunction SectionContent({\n  className,\n  children,\n  layoutName,\n  shouldScroll,\n  shouldDebugLayout,\n  tagName,\n}) {\n  let styleName = '';\n  const styleNameList = ['styles.root'];\n  const layoutClass = LAYOUT_CLASS_MAP[layoutName];\n  const TagName = tagName;\n\n  if (shouldScroll) styleNameList.push(styles['should-scroll']);\n  if (shouldDebugLayout) styleNameList.push(styles['should-debug-layout']);\n  if (layoutClass) styleNameList.push(layoutStyles[layoutClass]);\n\n  // Do not join inside JSX (otherwise arcane styleName error occurs)\n  styleName = styleNameList.join(' ');\n\n  return <TagName className={`${className} ${styleName}`}>{children}</TagName>;\n}\nSectionContent.propTypes = {\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** Content nodes where each node is a block to be laid out */\n  children: PropTypes.node.isRequired,\n  /** The name of the layout by which to arrange the nodes */\n  layoutName: PropTypes.oneOf(LAYOUTS).isRequired,\n  /** Whether to allow root element to scroll */\n  shouldScroll: PropTypes.bool,\n  /** Whether to allow panel debugging (highlight each panel with unique hue) */\n  shouldDebugLayout: PropTypes.bool,\n  /** Override tag of the root element */\n  tagName: PropTypes.string,\n};\nSectionContent.defaultProps = {\n  className: '',\n  shouldScroll: false,\n  shouldDebugLayout: false,\n  tagName: 'div',\n};\n\nexport default SectionContent;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SectionHeader, SectionContent } from '..';\nimport SectionMessages from './SectionMessages';\nimport { LAYOUTS, DEFAULT_LAYOUT } from '../SectionContent';\n\nimport styles from './Section.module.css';\n\n/**\n * A section layout structure that supports:\n *\n * - messages (automatically loads welcome message)\n * - header (with actions, e.g. links, buttons, form)\n * - content (that will be arranged in the layout you choose)\n * - manual or automatic sub-components (i.e. header, content)\n *\n * @example\n * // manually build messages, automatically build welcome message\n * <Section\n *   routeName=\"DASHBOARD\"\n *   messages={<>…</>}\n * />\n * @example\n * // overwrite text of an automatic welcome message, no additional messages\n * <Section\n *   routeName=\"DASHBOARD\"\n *   welcomeMessageText={`We welcome you to the dashboard, ${givenName}`}\n * />\n * @example\n * // define text for a manual welcome message, no additional messages\n * <Section\n *   welcomeMessageText={`We welcome you to this page, ${givenName}`}\n * />\n * @example\n * // add class to <body>, automatically build sub-components\n * // FAQ: class on <body> + `Bob.global.css` + `body.global-bob-class`\n * //      = unlimited, explicit, isolated CSS side effects\n * <Section\n *   bodyClassName=\"has-loaded-some_section\"\n *   content={…}\n * />\n * @example\n * // automatically build sub-components, with some customization\n * <Section\n *   header=\"Dashboard\"\n *   headerStyleName=\"header\"\n *   headerActions={…}\n *   content={…}\n *   contentStyleName=\"items\"\n *   contentLayoutName=\"twoColumn\"\n * />\n * @example\n * // alternate syntax to automatically build content\n * <Section\n *   contentStyleName=\"items\"\n *   contentLayoutName=\"twoColumn\"\n * >\n *   {…} <!-- i.e. content -->\n * </Section>\n * @example\n * // manually build sub-components\n * // WARNING: This component's styles are NOT applied to manual sub-components\n * // FAQ: The <SectionHeader> offers auto-built header's layout styles\n * // FAQ: The <SectionContent> offers auto-built content's layout styles\n * <Section\n *   manualHeader={\n *     <SectionHeader {…} />\n *   }\n *   manualContent={\n *     <SectionContent {…} />\n *   }\n * />\n * @example\n * // manually build content (alternate method)\n * // WARNING: This component's styles are NOT applied to manual sub-components\n * // FAQ: The <SectionContent> offers auto-built content's layout options\n * <Section manualContent>\n *   <SectionContent {…} />\n * />\n */\nfunction Section({\n  bodyClassName,\n  children,\n  className,\n  content,\n  contentClassName,\n  contentLayoutName,\n  contentShouldScroll,\n  header,\n  headerActions,\n  headerClassName,\n  manualContent,\n  manualHeader,\n  // manualSidebar,\n  // sidebar,\n  // sidebarClassName,\n  messages,\n  messagesClassName,\n  routeName,\n  welcomeMessageText,\n}) {\n  const shouldBuildHeader = header || headerClassName || headerActions;\n\n  // Allowing ineffectual prop combinations would lead to confusion\n  if (\n    manualContent &&\n    (content || contentClassName || contentLayoutName || contentShouldScroll)\n  ) {\n    throw new Error(\n      'When passing `manualContent`, the following props are ineffectual: `content`, `contentClassName`, `contentLayoutName`, `contentShouldScroll`'\n    );\n  }\n  if (manualHeader && (header || headerClassName || headerActions)) {\n    throw new Error(\n      'When passing `manualHeader`, the following props are ineffectual: `header`, `headerClassName`, `headerActions`'\n    );\n  }\n  // if (manualSidebar && (sidebar || sidebarClassName)) {\n  //   throw new Error(\n  //     'When passing `manualSidebar`, the following props are ineffectual: `sidebar`, `sidebarClassName`'\n  //   );\n  // }\n\n  useEffect(() => {\n    if (bodyClassName) document.body.classList.add(bodyClassName);\n\n    return function cleanup() {\n      if (bodyClassName) document.body.classList.remove(bodyClassName);\n    };\n  }, [bodyClassName]);\n\n  return (\n    <section className={`${className} ${styles.root}`}>\n      {/* eslint-disable */}\n      <SectionMessages\n        className={styles.messages}\n        routeName={routeName}\n        className={messagesClassName}\n        welcomeText={welcomeMessageText}\n      >\n        {messages}\n      </SectionMessages>\n      {/* {manualSidebar ? (\n        <>{manualSidebar}</>\n      ) : (\n        <Sidebar styleName=\"sidebar\" className={sidebarClassName}>\n          {sidebar}\n        </Sidebar>\n      )} */}\n      {manualHeader ? (\n        <>{manualHeader}</>\n      ) : (\n        shouldBuildHeader && (\n          <SectionHeader\n            className={`${headerClassName} ${styles.header}`}\n            actions={headerActions}\n          >\n            {header}\n          </SectionHeader>\n        )\n      )}\n      {manualContent ? (\n        <>\n          {manualContent}\n          {children}\n        </>\n      ) : (\n        <SectionContent\n          tagName=\"main\"\n          className={`${contentClassName} ${styles.content}`}\n          layoutName={contentLayoutName || DEFAULT_LAYOUT}\n          shouldScroll={contentShouldScroll}\n        >\n          {content}\n          {children}\n        </SectionContent>\n      )}\n    </section>\n  );\n}\nSection.propTypes = {\n  /** Name of class to append to body when section is active */\n  bodyClassName: PropTypes.string,\n  /** Alternate way to pass `manualContent` and `content` */\n  children: PropTypes.node,\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** The section content children (content element built automatically) */\n  content: PropTypes.node,\n  /** Any additional className(s) for the content element */\n  contentClassName: PropTypes.string,\n  /** The name of the layout by which to arrange the content children */\n  contentLayoutName: PropTypes.oneOf(LAYOUTS.concat('')),\n  /** Whether to allow content to scroll */\n  contentShouldScroll: PropTypes.bool,\n  /** The section header text (header element built automatically) */\n  header: PropTypes.node,\n  /** Any section actions for the header element */\n  headerActions: PropTypes.node,\n  /** Any additional className(s) for the header element */\n  headerClassName: PropTypes.string,\n  /** The section content (built by user) flag or element */\n  /* RFE: Ideally, limit these to one relevant `Section[…]` component */\n  /* SEE: https://github.com/facebook/react/issues/2979 */\n  manualContent: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  /** The section header (built by user) element */\n  manualHeader: PropTypes.element,\n  // /** The page-specific sidebar */\n  // sidebar: PropTypes.node,\n  // /** Additional className for the sidebar element */\n  // sidebarClassName: PropTypes.string,\n  /** Any component-based message(s) (e.g. <Alert>, <Message>) (welcome message found automatically, given `routeName`) */\n  messages: PropTypes.node,\n  /** Any additional className(s) for the message list */\n  messagesClassName: PropTypes.string,\n  /** The name of the route section (to search for a welcome message) */\n  routeName: PropTypes.string,\n  /** Any additional className(s) for the sidebar list */\n  // sidebarClassName: '',\n  /** Custom welcome text (can overwrite `routeName`-based welcome message) */\n  welcomeMessageText: PropTypes.string,\n};\nSection.defaultProps = {\n  bodyClassName: '',\n  children: '',\n  className: '',\n  content: '',\n  contentClassName: '',\n  contentLayoutName: '',\n  contentShouldScroll: false,\n  header: '',\n  headerActions: '',\n  headerClassName: '',\n  manualContent: undefined,\n  manualHeader: undefined,\n  messages: '',\n  messagesClassName: '',\n  routeName: '',\n  // sidebarClassName: '',\n  welcomeMessageText: '',\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './SectionHeader.module.css';\n\n/**\n * A header for a `Section[…]` component\n *\n * - heading text\n * - actions (e.g. links, buttons, form)\n * - automatic styles or markup for given context (ex: within a form or a table)\n *\n * @example\n * // a section header with heading text\n * <SectionHeader>\n *   <a href=\"…\">Hyperlinked Name of Section</a>\n * </SectionHeader>\n * @example\n * // a form header with actions and heading text\n * <SectionHeader\n *   actions={<button type=\"reset\">Reset</button>}\n *   isForForm\n * >\n *   Name of Form\n * </SectionHeader>\n * @example\n * // a table header with actions and heading text\n * <SectionHeader\n *   actions={<input type=\"search\" />}\n *   isForTable\n * >\n *   Name of Table\n * </SectionHeader>\n */\nfunction SectionHeader({\n  actions,\n  children,\n  className,\n  isForForm,\n  isForTable,\n}) {\n  let styleName = '';\n  const styleNameList = [styles['root']];\n  const HeadingTagName = isForForm || isForTable ? 'h3' : 'h2';\n\n  if (isForForm) styleNameList.push(styles['for-form']);\n  if (isForTable) styleNameList.push(styles['for-table']);\n\n  // Do not join inside JSX (otherwise arcane styleName error occurs)\n  styleName = styleNameList.join(' ');\n\n  return (\n    <header className={`${styleName} ${className}`}>\n      {children && (\n        <HeadingTagName className={styles.heading}>{children}</HeadingTagName>\n      )}\n      {actions}\n    </header>\n  );\n}\nSectionHeader.propTypes = {\n  /** Any actions (buttons, links, forms, etc) */\n  actions: PropTypes.node,\n  /** The text a.k.a. title */\n  children: PropTypes.node,\n  /** Any additional className(s) for the root element */\n  className: PropTypes.string,\n  /** Whether this header is for a form */\n  isForForm: PropTypes.bool,\n  /** Whether this header is for a table */\n  isForTable: PropTypes.bool,\n};\nSectionHeader.defaultProps = {\n  actions: '',\n  className: '',\n  children: '',\n  isForForm: false,\n  isForTable: false,\n};\n\nexport default SectionHeader;\n","import React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Button } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport './FileInputDropZone.scss';\n\nfunction RejectedFileMessage({ numberOfFiles }) {\n  if (numberOfFiles === 0) {\n    return null;\n  }\n\n  return (\n    <span className=\"rejected-file-message text-danger\">\n      One or more of your files exceeds the maximum size for an upload and were\n      not attached.\n    </span>\n  );\n}\n\nRejectedFileMessage.propTypes = {\n  numberOfFiles: PropTypes.number.isRequired,\n};\n\n/**\n * FileInputDropZone is a component where users can select files via file browser or by\n * drag/drop.  an area to drop files. If `file` property is set then files are listed\n * and user can manage (e.g. delete those files) directly in this component.\n */\nfunction FileInputDropZone({\n  files,\n  onSetFiles,\n  onRejectedFiles,\n  maxSize,\n  maxSizeMessage,\n  onRemoveFile,\n  isSubmitted,\n}) {\n  const [numberRejectedFiles, setNumberRejectedFiles] = useState(0);\n\n  const { getRootProps, open, getInputProps } = useDropzone({\n    noClick: true,\n    maxSize,\n    onDrop: (accepted) => {\n      onSetFiles(accepted);\n      setNumberRejectedFiles(0);\n    },\n    onDropRejected: (rejected) => {\n      if (onRejectedFiles) {\n        onRejectedFiles(rejected);\n      }\n      setNumberRejectedFiles(rejected.length);\n    },\n  });\n\n  const removeFile = (fileIndex) => {\n    if (onRemoveFile) {\n      onRemoveFile(fileIndex);\n      setNumberRejectedFiles(0);\n    }\n  };\n\n  const showFileList = files && files.length > 0;\n\n  if (isSubmitted && numberRejectedFiles > 0) {\n    // reset number of rejected files when files is submitted\n    setNumberRejectedFiles(0);\n  }\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <div {...getRootProps()} className=\"dropzone-area\">\n      <input {...getInputProps()} />\n      {!showFileList && (\n        <div className=\"no-attachment-view\">\n          <i className=\"icon-upload\" />\n          <br />\n          {files && <RejectedFileMessage numberOfFiles={numberRejectedFiles} />}\n          <Button outline onClick={open} className=\"select-files-button\">\n            Select File(s)\n          </Button>\n          <strong>or</strong>\n          <strong>Drag and Drop</strong>\n          <br />\n          {maxSizeMessage}\n        </div>\n      )}\n      {showFileList && (\n        <div className=\"attachment-view\">\n          <div className=\"attachment-list\">\n            {files.map((f, i) => (\n              <div className=\"attachment-block\" key={[f.name, i].toString()}>\n                <span className=\"d-inline-block text-truncate\">{f.name}</span>\n                <Button\n                  color=\"link\"\n                  className=\"attachment-remove\"\n                  onClick={() => {\n                    setNumberRejectedFiles(0);\n                    removeFile(i);\n                  }}\n                >\n                  Remove\n                </Button>\n              </div>\n            ))}\n          </div>\n          <RejectedFileMessage numberOfFiles={numberRejectedFiles} />\n          <Button outline onClick={open} className=\"select-files-button\">\n            Select File(s)\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nFileInputDropZone.propTypes = {\n  files: PropTypes.arrayOf(PropTypes.object),\n  onSetFiles: PropTypes.func.isRequired,\n  onRejectedFiles: PropTypes.func,\n  onRemoveFile: PropTypes.func,\n  isSubmitted: PropTypes.bool,\n  maxSizeMessage: PropTypes.string.isRequired,\n  maxSize: PropTypes.number.isRequired,\n};\n\nFileInputDropZone.defaultProps = {\n  files: null,\n  isSubmitted: false,\n  onRejectedFiles: null,\n  onRemoveFile: null,\n};\n\nexport default FileInputDropZone;\n","import React from 'react';\nimport { useField } from 'formik';\nimport { FormGroup, FormText, Label } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport FileInputDropZone from './FileInputDropZone';\nimport './FormField.scss';\n\nfunction FileInputDropZoneFormField({\n  id,\n  isSubmitted,\n  description,\n  maxSizeMessage,\n  maxSize,\n}) {\n  const [field, , helpers] = useField(id);\n\n  const onSetFiles = (acceptedFiles) => {\n    helpers.setValue([...field.value, ...acceptedFiles]);\n  };\n  const onRemoveFile = (fileIndex) => {\n    const files = field.value;\n    files.splice(fileIndex, 1);\n    helpers.setValue(files);\n  };\n  return (\n    <FormGroup>\n      <Label\n        for={id}\n        size=\"sm\"\n        className=\"form-field__label\"\n        style={{ display: 'flex', alignItems: 'center' }}\n      >\n        Attach Files\n      </Label>\n      <FileInputDropZone\n        id={id}\n        files={field.value}\n        onSetFiles={onSetFiles}\n        onRemoveFile={onRemoveFile}\n        isSubmitted={isSubmitted}\n        maxSizeMessage={maxSizeMessage}\n        maxSize={maxSize}\n      />\n      <FormText className=\"form-field__help\" color=\"muted\">\n        {description}\n      </FormText>\n    </FormGroup>\n  );\n}\n\nFileInputDropZoneFormField.propTypes = {\n  id: PropTypes.string.isRequired,\n  isSubmitted: PropTypes.bool.isRequired,\n  description: PropTypes.string,\n  maxSizeMessage: PropTypes.string.isRequired,\n  maxSize: PropTypes.number,\n};\n\nFileInputDropZoneFormField.defaultProps = {\n  description: undefined,\n  maxSize: Infinity,\n};\n\nexport default FileInputDropZoneFormField;\n","import React, { useState } from 'react';\nimport {\n  Button,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Badge,\n  InputGroup,\n  InputGroupAddon,\n} from 'reactstrap';\n\nimport { useField } from 'formik';\nimport PropTypes from 'prop-types';\nimport './FormField.scss';\n\n/** A limited-choice wrapper for `FormField` */\nconst FormFieldWrapper = ({ children, type }) => {\n  let wrapper;\n\n  switch (type) {\n    case 'InputGroup':\n      wrapper = <InputGroup>{children}</InputGroup>;\n      break;\n\n    case 'FormGroup':\n    default:\n      wrapper = <FormGroup>{children}</FormGroup>;\n  }\n\n  return wrapper;\n};\nFormFieldWrapper.propTypes = {\n  /** The content for the wrapper */\n  children: PropTypes.node.isRequired,\n  /** Which wrapper to use */\n  type: PropTypes.oneOf(['InputGroup', 'FormGroup', '']),\n};\nFormFieldWrapper.defaultProps = {\n  type: 'FormGroup',\n};\n\n/**\n * A standard form field that supports some customization and presets.\n *\n * Customizations:\n * - providing an `<InputGroupAddon>` (can not use with \"Agave File Selector\")\n *\n * Presets:\n * - Agave File Selector (requires `agaveFile` and `SelectModal`)\n */\nconst FormField = ({\n  addon,\n  addonType,\n  label,\n  description,\n  required,\n  agaveFile,\n  SelectModal,\n  ...props\n}) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and also replace ErrorMessage entirely.\n  const [field, meta, helpers] = useField(props);\n  const [openAgaveFileModal, setOpenAgaveFileModal] = useState(false);\n  const { id, name } = props;\n  const hasAddon = addon !== undefined;\n  const wrapperType = hasAddon ? 'InputGroup' : '';\n\n  const FieldLabel = () => (\n    /* !!!: Temporary extra markup to make simpler PR diff */\n    <>\n      <Label\n        className=\"form-field__label\"\n        for={id || name}\n        size=\"sm\"\n        style={{ display: 'flex', alignItems: 'center' }}\n      >\n        {label}{' '}\n        {required ? (\n          <Badge color=\"danger\" style={{ marginLeft: '10px' }}>\n            Required\n          </Badge>\n        ) : null}\n      </Label>\n    </>\n  );\n  const FieldNote = () => (\n    <>\n      {meta.touched && meta.error ? (\n        <div className=\"form-field__validation-error\">{meta.error}</div>\n      ) : (\n        description && (\n          <FormText className=\"form-field__help\" color=\"muted\">\n            {description}\n          </FormText>\n        )\n      )}\n    </>\n  );\n\n  // Allowing ineffectual prop combinations would lead to confusion\n  if (addon && agaveFile) {\n    throw new Error(\n      'You must not pass `addon` and `agaveFile`, because `agaveFile` triggers its own field add-on'\n    );\n  }\n  if ((!agaveFile && SelectModal) || (agaveFile && !SelectModal)) {\n    throw new Error('An `agaveFile` and a `SelectModal` must both be passed');\n  }\n\n  return (\n    /* !!!: Temporary bad indentation to make simpler PR diff */\n    <>\n      {label && hasAddon ? <FieldLabel /> : null}\n      <FormFieldWrapper type={wrapperType}>\n        {label && !hasAddon ? <FieldLabel /> : null}\n        {agaveFile ? (\n          <>\n            <SelectModal\n              isOpen={openAgaveFileModal}\n              toggle={() => {\n                setOpenAgaveFileModal((prevState) => !prevState);\n              }}\n              onSelect={(system, path) => {\n                helpers.setValue(`agave://${system}${path}`);\n              }}\n            />\n\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">\n                <Button\n                  size=\"sm\"\n                  color=\"secondary\"\n                  type=\"button\"\n                  onClick={() => setOpenAgaveFileModal(true)}\n                >\n                  Select\n                </Button>\n              </InputGroupAddon>\n              <Input {...field} {...props} bsSize=\"sm\" />\n            </InputGroup>\n          </>\n        ) : (\n          /* !!!: Temporary bad indentation to make simpler PR diff */\n          <>\n            {hasAddon && addonType === 'prepend' ? addon : null}\n            <Input {...field} {...props} bsSize=\"sm\" />\n            {hasAddon && addonType === 'append' ? addon : null}\n          </>\n        )}\n        {!hasAddon ? <FieldNote /> : null}\n      </FormFieldWrapper>\n      {hasAddon ? <FieldNote /> : null}\n    </>\n  );\n};\nFormField.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  required: PropTypes.bool,\n  agaveFile: PropTypes.bool,\n  SelectModal: PropTypes.func,\n  /** An [`<InputGroupAddon>`](https://reactstrap.github.io/components/input-group/) to add */\n  addon: PropTypes.node,\n  /** The [`<InputGroupAddon>` `addonType`](https://reactstrap.github.io/components/input-group/) to add */\n  addonType: PropTypes.oneOf(['prepend', 'append']),\n};\nFormField.defaultProps = {\n  id: undefined,\n  name: undefined,\n  label: undefined,\n  description: undefined,\n  required: false,\n  agaveFile: undefined,\n  SelectModal: undefined,\n  addon: undefined,\n  addonType: undefined,\n};\n\nexport default FormField;\n","import React from 'react';\nimport { useTable } from 'react-table';\nimport PropTypes from 'prop-types';\nimport LoadingSpinner from '../LoadingSpinner';\nimport './InfiniteScrollTable.scss';\n\nconst rowContentPropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.element,\n  PropTypes.oneOf([React.Fragment]),\n]);\n\nconst InfiniteScrollLoadingRow = ({ isLoading }) => {\n  if (!isLoading) {\n    return null;\n  }\n  return (\n    <tr className=\"-status\">\n      <td>\n        <LoadingSpinner placement=\"inline\" />\n      </td>\n    </tr>\n  );\n};\nInfiniteScrollLoadingRow.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nconst InfiniteScrollNoDataRow = ({ display, noDataText }) => {\n  if (!display) {\n    return null;\n  }\n  return (\n    <tr className=\"-status\">\n      <td>\n        <span className=\"-status__message\">{noDataText}</span>\n      </td>\n    </tr>\n  );\n};\nInfiniteScrollNoDataRow.propTypes = {\n  display: PropTypes.bool.isRequired,\n  noDataText: rowContentPropType.isRequired,\n};\n\nconst InfiniteScrollTable = ({\n  tableColumns,\n  tableData,\n  onInfiniteScroll,\n  isLoading,\n  className,\n  noDataText,\n  getRowProps,\n  columnMemoProps,\n}) => {\n  const columns = React.useMemo(\n    () => tableColumns,\n    /* eslint-disable-next-line */\n    [columnMemoProps, tableColumns]\n  );\n  const data = React.useMemo(() => tableData, [tableData]);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n  const onScroll = ({ target }) => {\n    const bottom =\n      target.scrollHeight - target.scrollTop === target.clientHeight;\n    if (bottom && target.scrollTop > 0) {\n      onInfiniteScroll(tableData.length);\n    }\n  };\n\n  return (\n    <table {...getTableProps()} className={`${className} InfiniteScrollTable`}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()} onScroll={onScroll}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()} {...getRowProps(row)}>\n              {row.cells.map((cell) => {\n                return (\n                  <td\n                    {...cell.getCellProps({ className: cell.column.className })}\n                  >\n                    {cell.render('Cell')}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n        <InfiniteScrollLoadingRow isLoading={isLoading} />\n        <InfiniteScrollNoDataRow\n          display={!isLoading && tableData.length === 0}\n          noDataText={noDataText}\n        />\n      </tbody>\n    </table>\n  );\n};\n\nInfiniteScrollTable.propTypes = {\n  tableColumns: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  tableData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  onInfiniteScroll: PropTypes.func,\n  isLoading: PropTypes.bool,\n  className: PropTypes.string,\n  noDataText: rowContentPropType,\n  getRowProps: PropTypes.func,\n  columnMemoProps: PropTypes.arrayOf(PropTypes.any),\n};\nInfiniteScrollTable.defaultProps = {\n  onInfiniteScroll: (offset) => {},\n  isLoading: false,\n  className: '',\n  noDataText: '',\n  getRowProps: (row) => {},\n  columnMemoProps: [],\n};\n\nexport default InfiniteScrollTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Icon.module.css';\n\nconst Icon = ({ children, className, name }) => {\n  const iconClassName = `icon icon-${name}`;\n  // FAQ: The conditional avoids an extra space in class attribute value\n  const fullClassName = className\n    ? [className, iconClassName].join(' ')\n    : iconClassName;\n  const label = children;\n\n  return <i className={fullClassName} role=\"img\" aria-label={label} />;\n};\nIcon.propTypes = {\n  /** A text alternative to the icon (for accessibility) */\n  children: PropTypes.string,\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** Name of icon from icon font (without the (`icon-` prefix) */\n  name: PropTypes.string.isRequired,\n};\nIcon.defaultProps = {\n  children: '',\n  className: '',\n};\n\nexport default Icon;\n","import Icon from './Icon';\n\nexport default Icon;\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardBody, Card, Collapse } from 'reactstrap';\nimport Icon from '../Icon';\nimport './Expand.global.scss';\nimport styles from './Expand.module.scss';\n\nconst Expand = ({ className, detail, message }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleCallback = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  // TODO: Use `details/summary` tags, when `onToggle` support is \"last 2 versions\"\n  // SEE: https://github.com/facebook/react/issues/15486#issuecomment-669674869\n  return (\n    /* eslint-disable-next-line */\n    <Card className={styles.container} className={className} tag=\"div\">\n      <CardHeader className={styles.summary} onClick={toggleCallback} tag=\"div\">\n        <strong className={styles.header}>{detail}</strong>\n        <Icon name={isOpen ? 'collapse' : 'expand'} />\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{message}</CardBody>\n      </Collapse>\n    </Card>\n  );\n};\n\nExpand.propTypes = {\n  /** Additional className for the root element */\n  className: PropTypes.string,\n\n  detail: PropTypes.string.isRequired,\n  message: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n};\nExpand.defaultProps = {\n  className: '',\n};\n\nexport default Expand;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Fade } from 'reactstrap';\nimport Icon from '../Icon';\n\nimport styles from './Message.module.scss';\n\nexport const ERROR_TEXT = {\n  mismatchCanDismissScope:\n    'For a <(Section)Message> to use `canDismiss`, `scope` must equal `section`.',\n  deprecatedType:\n    'In a <(Section|Inline)Message> `type=\"warn\"` is deprecated. Use `type=\"warning\"` instead.',\n  missingScope:\n    'A <Message> without a `scope` should become an <InlineMessage>. (If <Message> must be used, then explicitely set `scope=\"inline\"`.)',\n};\n\nexport const TYPE_MAP = {\n  info: {\n    iconName: 'conversation',\n    className: 'is-info',\n    iconText: 'Notice',\n  },\n  success: {\n    iconName: 'approved-reverse',\n    className: 'is-success',\n    iconText: 'Notice',\n  },\n  warning: {\n    iconName: 'alert',\n    className: 'is-warn',\n    iconText: 'Warning',\n  },\n  error: {\n    iconName: 'alert',\n    className: 'is-error',\n    iconText: 'Error',\n  },\n};\nTYPE_MAP.warn = TYPE_MAP.warning; // FAQ: Deprecated support for `type=\"warn\"`\nexport const TYPES = Object.keys(TYPE_MAP);\n\nexport const SCOPE_MAP = {\n  inline: {\n    className: 'is-scope-inline',\n    role: 'status',\n    tagName: 'span',\n  },\n  section: {\n    className: 'is-scope-section',\n    role: 'status',\n    tagName: 'p',\n  },\n  // app: { … } // FAQ: Do not use; instead, use a <NotificationToast>\n};\nexport const SCOPES = ['', ...Object.keys(SCOPE_MAP)];\nexport const DEFAULT_SCOPE = 'inline'; // FAQ: Historical support for default\n\n/**\n * Show an event-based message to the user\n * @todo Document examples\n * @example\n * // Blah blah…\n * <Sample jsx>\n */\nconst Message = ({\n  children,\n  className,\n  onDismiss,\n  canDismiss,\n  isVisible,\n  scope,\n  type,\n}) => {\n  const typeMap = TYPE_MAP[type];\n  const scopeMap = SCOPE_MAP[scope || DEFAULT_SCOPE];\n  const { iconName, iconText, className: typeClassName } = typeMap;\n  const { role, tagName, className: scopeClassName } = scopeMap;\n\n  const hasDismissSupport = scope === 'section';\n\n  // Manage prop warnings\n  /* eslint-disable no-console */\n  if (canDismiss && !hasDismissSupport) {\n    // Component will work, except `canDismiss` is ineffectual\n    console.error(ERROR_TEXT.mismatchCanDismissScope);\n  }\n  if (type === 'warn') {\n    // Component will work, but `warn` is deprecated value\n    console.info(ERROR_TEXT.deprecatedType);\n  }\n  if (!scope) {\n    // Component will work, but `scope` should be defined\n    console.info(ERROR_TEXT.missingScope);\n  }\n  /* eslint-enable no-console */\n\n  // Manage class names\n  const modifierClassNames = [];\n  modifierClassNames.push(typeClassName);\n  modifierClassNames.push(scopeClassName);\n  const containerStyleNames = ['container', ...modifierClassNames]\n    .map((name) => styles[name])\n    .join(' ');\n\n  // Manage disappearance\n  // FAQ: Design does not want fade, but we still use <Fade> to manage dismissal\n  // TODO: Consider replacing <Fade> with a replication of `unmountOnExit: true`\n  const shouldFade = false;\n  const fadeProps = {\n    ...Fade.defaultProps,\n    unmountOnExit: true,\n    baseClass: shouldFade ? Fade.defaultProps.baseClass : '',\n    timeout: shouldFade ? Fade.defaultProps.timeout : 0,\n  };\n\n  return (\n    <Fade\n      // Avoid manually syncing Reactstrap <Fade>'s default props\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...fadeProps}\n      tag={tagName}\n      className={`${className} ${containerStyleNames}`}\n      role={role}\n      in={isVisible}\n    >\n      <Icon\n        className={`${styles['icon']} ${styles['type-icon']}`}\n        name={iconName}\n      >\n        {iconText}\n      </Icon>\n      <span className={styles.text} data-testid=\"text\">\n        {children}\n      </span>\n      {canDismiss && hasDismissSupport ? (\n        <button\n          type=\"button\"\n          className={styles['close-button']}\n          aria-label=\"Close\"\n          onClick={onDismiss}\n        >\n          <Icon\n            className={`${styles.icon} ${styles['close-icon']}`}\n            name=\"close\"\n          />\n        </button>\n      ) : null}\n    </Fade>\n  );\n};\nMessage.propTypes = {\n  /** Whether an action can be dismissed (requires scope equals `section`) */\n  canDismiss: PropTypes.bool,\n  /** Message text (as child node) */\n  /* FAQ: We can support any values, even a component */\n  children: PropTypes.node.isRequired, // This checks for any render-able value\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** Whether message is visible (pair with `onDismiss`) */\n  isVisible: PropTypes.bool,\n  /** Action on message dismissal (pair with `isVisible`) */\n  onDismiss: PropTypes.func,\n  /** How to place the message within the layout */\n  scope: PropTypes.oneOf(SCOPES), // RFE: Require scope; change all instances\n  /** Message type or severity */\n  type: PropTypes.oneOf(TYPES).isRequired,\n};\nMessage.defaultProps = {\n  className: '',\n  canDismiss: false,\n  isVisible: true,\n  onDismiss: () => {},\n  scope: '', // RFE: Require scope; remove this line\n};\n\nexport default Message;\n","import Message from './Message';\n\nexport default Message;\n","import React from 'react';\nimport Message from '../Message';\n\n/**\n * Show an event-based message to the user\n * @todo Document examples\n * @example\n * // Blah blah…\n * <Sample jsx>\n */\nconst InlineMessage = (props) => {\n  // Override default props\n  const messageProps = {\n    ...Message.defaultProps,\n    ...props,\n    canDismiss: false,\n    scope: 'inline',\n  };\n\n  // Avoid manually syncing <Message>'s props\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Message {...messageProps} />;\n};\nInlineMessage.propTypes = Message.propTypes;\nInlineMessage.defaultProps = Message.defaultProps;\n\nexport default InlineMessage;\n","import InlineMessage from './InlineMessage';\n\nexport default InlineMessage;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Message from '../Message';\n\n/**\n * Show an event-based message to the user\n * @todo Document examples\n * @example\n * // Blah blah…\n * <Sample jsx>\n */\nconst SectionMessage = (props) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  // Manage visibility\n  const onDismiss = useCallback(() => {\n    setIsVisible(!isVisible);\n  }, [isVisible]);\n\n  // Override default props\n  const messageProps = {\n    ...Message.defaultProps,\n    ...props,\n    isVisible,\n    onDismiss,\n    scope: 'section',\n  };\n\n  // Avoid manually syncing <Message>'s props\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Message {...messageProps} />;\n};\nSectionMessage.propTypes = {\n  ...Message.propTypes,\n  isVisible: PropTypes.bool,\n  onDismiss: PropTypes.func,\n};\nSectionMessage.defaultProps = Message.defaultProps;\n\nexport default SectionMessage;\n","import SectionMessage from './SectionMessage';\n\nexport default SectionMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport styles from './DescriptionList.module.scss';\n\nexport const DIRECTION_CLASS_MAP = {\n  vertical: 'is-vert',\n  horizontal: 'is-horz',\n};\nexport const DEFAULT_DIRECTION = 'vertical';\nexport const DIRECTIONS = ['', ...Object.keys(DIRECTION_CLASS_MAP)];\n\nexport const DENSITY_CLASS_MAP = {\n  compact: 'is-narrow',\n  default: 'is-wide',\n};\nexport const DEFAULT_DENSITY = 'default';\nexport const DENSITIES = ['', ...Object.keys(DENSITY_CLASS_MAP)];\n\nconst DescriptionList = ({ className, data, density, direction }) => {\n  const modifierClasses = [];\n  modifierClasses.push(DENSITY_CLASS_MAP[density || DEFAULT_DENSITY]);\n  modifierClasses.push(DIRECTION_CLASS_MAP[direction || DEFAULT_DIRECTION]);\n  const containerStyleNames = ['container', ...modifierClasses]\n    .map((name) => styles[name])\n    .join(' ');\n\n  return (\n    <dl className={`${className} ${containerStyleNames}`} data-testid=\"list\">\n      {Object.entries(data).map(([key, value]) => (\n        <React.Fragment key={key}>\n          <dt className={styles.key} data-testid=\"key\">\n            {key}\n          </dt>\n          {Array.isArray(value) ? (\n            value.map((val) => (\n              <dd className={styles.value} data-testid=\"value\" key={uuidv4()}>\n                {val}\n              </dd>\n            ))\n          ) : (\n            <dd className={styles.value} data-testid=\"value\">\n              {value}\n            </dd>\n          )}\n        </React.Fragment>\n      ))}\n    </dl>\n  );\n};\nDescriptionList.propTypes = {\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** Selector type */\n  /* FAQ: We can support any values, even a component */\n  // eslint-disable-next-line react/forbid-prop-types\n  data: PropTypes.object.isRequired,\n  /** Layout density */\n  density: PropTypes.oneOf(DENSITIES),\n  /** Layout direction */\n  direction: PropTypes.oneOf(DIRECTIONS),\n};\nDescriptionList.defaultProps = {\n  className: '',\n  density: DEFAULT_DENSITY,\n  direction: DEFAULT_DIRECTION,\n};\n\nexport default DescriptionList;\n","import DescriptionList from './DescriptionList';\n\nexport default DescriptionList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input as BootstrapInput } from 'reactstrap';\n\nimport styles from './DropdownSelector.module.css';\n\nexport const TYPES = ['', 'single', 'multiple'];\nexport const DEFAULT_TYPE = 'single';\n\n// RFE: Support `options` object prop and require either `options` or `children` prop:\n//      - https://stackoverflow.com/a/49682510/11817077\n//      - https://stackoverflow.com/a/52661344/11817077\n//      - https://www.npmjs.com/package/react-either-property\n//      - \"customProp\" at https://reactjs.org/docs/typechecking-with-proptypes.html#proptypes\n\nconst DropdownSelector = ({ type, onChange, ...props }) => {\n  const canSelectMany = type === 'multiple';\n\n  return (\n    <BootstrapInput\n      // FAQ: This is a one-off, so it does not belong in `.eslintrc`\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n      onChange={onChange}\n      type=\"select\"\n      className={styles.container}\n      multiple={canSelectMany}\n      data-testid=\"selector\"\n      // The ARIA role for a `<select>` is implicit (and depends on `<select>` attributes)\n      // SEE: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#Technical_summary\n    />\n  );\n};\nDropdownSelector.propTypes = {\n  /** Selector type */\n  type: PropTypes.oneOf(TYPES),\n  /** Selector type */\n  onChange: PropTypes.func,\n  /** Options (as children, like Reactstrap) */\n  // FAQ: Limiting and documenting this has become a rabbit hole; help welcome — Wes B\n  // children: PropTypes.any.isRequired\n};\nDropdownSelector.defaultProps = {\n  type: DEFAULT_TYPE,\n  onChange: () => {},\n};\n\nexport default DropdownSelector;\n","import DropdownSelector from './DropdownSelector';\n\nexport default DropdownSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert } from 'reactstrap';\n\n/**\n * Whether to show a welcome message\n * @param {String} messageName - The name of the message to check\n */\nexport function useShouldShowMessage(messageName) {\n  const welcomeMessages = {};\n  return welcomeMessages && welcomeMessages[messageName];\n}\n\n/**\n * A message which, when dismissed, will not appear again unless browser storage is cleared\n *\n * _This message is designed for user introduction to sections, but can be abstracted further into a `<DismissableMessage>` or abstracted less such that a message need not be passed in._\n *\n * @example\n * // message with custom text, class, and identifier\n * <WelcomeMessage\n *   className=\"external-message-class\"\n *   messageName={identifierForMessageLikeRouteName}\n * >\n *   Introductory text (defined externally).\n * </WelcomeMessage>\n */\nfunction WelcomeMessage({ children, className, messageName }) {\n  const shouldShow = useShouldShowMessage(messageName);\n  const welcomeMessages = {};\n\n  function onDismiss(name) {\n    const newMessagesState = {\n      ...welcomeMessages,\n      [name]: false,\n    };\n    return newMessagesState;\n  }\n\n  return (\n    <Alert\n      isOpen={shouldShow}\n      toggle={() => onDismiss(messageName)}\n      color=\"secondary\"\n      className={className}\n    >\n      {children}\n    </Alert>\n  );\n}\nWelcomeMessage.propTypes = {\n  /** Message as text or element(s) */\n  children: PropTypes.node.isRequired,\n  /** Additional className for the root element */\n  className: PropTypes.string,\n  /** A unique identifier for the message */\n  messageName: PropTypes.string.isRequired,\n};\nWelcomeMessage.defaultProps = {\n  className: '',\n};\n\nexport default WelcomeMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Pill.module.scss';\n\nfunction Pill({ children, type, className, shouldTruncate }) {\n  let pillStyleName = `root is-${type}`;\n\n  if (shouldTruncate) pillStyleName += ' should-truncate';\n\n  return (\n    <span className={`${styles[pillStyleName]} ${className}`}>{children}</span>\n  );\n}\n\nPill.propTypes = {\n  children: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  className: PropTypes.string,\n  shouldTruncate: PropTypes.bool,\n};\n\nPill.defaultProps = {\n  type: 'normal',\n  className: '',\n  shouldTruncate: true,\n};\n\nexport default Pill;\n","import Pill from './Pill';\n\nexport default Pill;\n","import React, { useCallback, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport Icon from '../Icon';\nimport styles from './TextCopyField.module.scss';\n\nconst TextCopyField = ({ value, placeholder }) => {\n  const transitionDuration = 0.15; // second(s)\n  const stateDuration = 1; // second(s)\n  const stateTimeout = transitionDuration + stateDuration; // second(s)\n\n  const [isCopied, setIsCopied] = useState(false);\n\n  const onCopy = useCallback(() => {\n    setIsCopied(true);\n\n    const timeout = setTimeout(() => {\n      setIsCopied(false);\n      clearTimeout(timeout);\n    }, stateTimeout * 1000);\n  }, [setIsCopied, stateTimeout]);\n  const isEmpty = !value || value.length === 0;\n  const onChange = (event) => {\n    // Swallow keyboard events on the Input control, but\n    // still allow selecting the text. readOnly property of\n    // Input is not adequate for this purpose because it\n    // prevents text selection\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"input-group\">\n      <div className=\"input-group-prepend\">\n        <CopyToClipboard text={value}>\n          <Button\n            className={`${styles['copy-button']} ${\n              isCopied ? styles['is-copied'] : ''\n            }`}\n            // RFE: Avoid manual JS ↔ CSS sync of transition duration by using:\n            //      - `data-attribute` and `attr()` (pending browser support)\n            //      - PostCSS and JSON variables (pending greater need for this)\n            style={{ '--transition-duration': `${transitionDuration}s` }}\n            onClick={onCopy}\n            disabled={isEmpty}\n            type=\"button\"\n          >\n            <Icon\n              name={isCopied ? 'approved-reverse' : 'link'}\n              className={styles['button__icon']}\n            />\n            <span className={styles['button__text']}>Copy</span>\n          </Button>\n        </CopyToClipboard>\n      </div>\n      <input\n        type=\"text\"\n        onChange={onChange}\n        value={value}\n        className={`form-control ${styles.input}`}\n        placeholder={placeholder}\n        data-testid=\"input\"\n        readOnly\n      />\n    </div>\n  );\n};\n\nTextCopyField.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nTextCopyField.defaultProps = {\n  value: '',\n  placeholder: '',\n};\n\nexport default TextCopyField;\n","import React, { useState, useCallback } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport styles from './ReadMore.module.scss';\n\nconst ReadMore = ({ className, children }) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const toggleCallback = useCallback(() => {\n    setExpanded(!expanded);\n  }, [expanded, setExpanded]);\n\n  const { height, ref } = useResizeDetector();\n\n  const hasOverflow =\n    ref && ref.current ? ref.current.scrollHeight > height : false;\n\n  return (\n    <>\n      {\n        <div\n          className={`${\n            expanded ? styles.expanded : styles.clamped\n          } ${className}`}\n          ref={ref}\n        >\n          {children}\n        </div>\n      }\n      {(hasOverflow || expanded) && (\n        <Button color=\"link\" onClick={toggleCallback}>\n          {expanded ? 'Read Less' : 'Read More'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nReadMore.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nReadMore.defaultProps = {\n  className: '',\n};\n\nexport default ReadMore;\n","import ReadMore from './ReadMore';\n\nexport default ReadMore;\n","import React from 'react';\nimport { Button } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport styles from './Paginator.module.scss';\n\nconst PaginatorPage = ({ number, callback, current }) => {\n  return (\n    <div className={styles['page-root']}>\n      <Button\n        className={`${styles.page} ${number === current ? styles.current : ''}`}\n        onClick={() => callback(number)}\n      >\n        {number}\n      </Button>\n    </div>\n  );\n};\n\nPaginatorPage.propTypes = {\n  number: PropTypes.number.isRequired,\n  callback: PropTypes.func.isRequired,\n  current: PropTypes.number.isRequired,\n};\n\nconst Paginator = ({ pages, current, callback, spread }) => {\n  let start, end;\n  if (pages === 1) {\n    end = 0;\n    start = 1;\n  } else if (pages > 2 && pages <= spread) {\n    start = 2;\n    end = pages - 1;\n  } else if (pages > spread && current <= 4) {\n    start = 2;\n    end = spread - 1;\n  } else if (pages > spread && current > pages - (spread - 2)) {\n    start = pages - (spread - 2);\n    end = pages - 1;\n  } else {\n    const delta = Math.floor((spread - 2) / 2);\n    start = current - delta;\n    end = current + delta;\n  }\n  const middle = end - start + 1;\n  const middlePages =\n    middle > 0\n      ? Array(middle)\n          .fill()\n          .map((_, index) => start + index)\n      : [];\n  return (\n    <div className={styles.root}>\n      <Button\n        color=\"link\"\n        className={styles.root}\n        onClick={() => callback(current - 1)} // eslint-disable-line\n        disabled={current === 1}\n      >\n        <span>&lt; Previous</span>\n      </Button>\n      <PaginatorPage number={1} callback={callback} current={current} />\n      {middlePages[0] > 2 && <span>...</span>}\n      {middlePages.map((number) => {\n        return (\n          <PaginatorPage\n            number={number}\n            key={number}\n            current={current}\n            callback={callback}\n          />\n        );\n      })}\n      {middlePages[middlePages.length - 1] < pages - 1 && <span>...</span>}\n      {pages > 1 && (\n        <PaginatorPage number={pages} callback={callback} current={current} />\n      )}\n      <Button\n        color=\"link\"\n        className={styles.endcap}\n        onClick={() => callback(current + 1)} // eslint-disable-line\n        disabled={current === pages}\n      >\n        <span>Next &gt;</span>\n      </Button>\n    </div>\n  );\n};\n\nPaginator.propTypes = {\n  pages: PropTypes.number.isRequired,\n  current: PropTypes.number.isRequired,\n  callback: PropTypes.func.isRequired,\n  spread: PropTypes.number, // Number of page buttons to show\n};\n\nPaginator.defaultProps = {\n  spread: 11,\n};\n\nexport default Paginator;\n","import { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useTapisConfig } from 'tapis-hooks';\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction ProtectedRoute({ children, ...rest }: RouteProps) {\n  const { accessToken } = useTapisConfig();\n  return (\n    <Route\n      {...rest}\n      render={({ location }: RouteProps) =>\n        accessToken ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import ProtectedRoute from './ProtectedRoute';\n\nexport default ProtectedRoute;\n","import { default as FieldWrapper } from './FieldWrapper';\nexport type { FieldWrapperProps } from './FieldWrapper';\n\nexport default FieldWrapper;\n","import React from 'react';\nimport { FormGroup, Label, FormText, Badge } from 'reactstrap';\n\nimport { useField, FieldHookConfig } from 'formik';\nimport './FieldWrapper.scss';\n\ntype FieldWrapperCustomProps = {\n  label: string;\n  required?: boolean;\n  description: string;\n  children?: React.ReactChild | React.ReactChild[];\n  key?: string;\n};\n\nexport type FieldWrapperProps = {\n  props: FieldHookConfig<string>;\n} & FieldWrapperCustomProps;\n\nconst FieldWrapper: React.FC<FieldWrapperProps> = ({\n  props,\n  label,\n  required,\n  description,\n  children,\n}) => {\n  const [field, meta] = useField(props);\n  return (\n    <FormGroup>\n      <Label\n        className=\"form-field__label\"\n        size=\"sm\"\n        style={{ display: 'flex', alignItems: 'center' }}\n      >\n        {label}{' '}\n        {required ? (\n          <Badge color=\"danger\" style={{ marginLeft: '10px' }}>\n            Required\n          </Badge>\n        ) : null}\n      </Label>\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, {\n            ...field,\n            ...props,\n            key: props.name,\n          });\n        }\n        return child;\n      })}\n      {meta.touched && meta.error ? (\n        <div className=\"form-field__validation-error\">{meta.error}</div>\n      ) : (\n        description && (\n          <FormText className=\"form-field__help\" color=\"muted\">\n            {description}\n          </FormText>\n        )\n      )}\n    </FormGroup>\n  );\n};\n\nexport default FieldWrapper;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Icon } from 'tapis-ui/_common';\nimport styles from './Navbar.module.scss';\n\nexport const NavItem: React.FC<{ to: string; icon?: string }> = ({\n  to,\n  icon,\n  children,\n}) => (\n  <NavLink\n    to={to}\n    className={styles['nav-link']}\n    activeClassName={styles['active']}\n    exact={to === '/'}\n  >\n    <div className={styles['nav-content']}>\n      {icon && <Icon name={icon} />}\n      {/* we'll want to set name based on the app */}\n      <span className={styles['nav-text']}>{children}</span>\n    </div>\n  </NavLink>\n);\n\nconst Navbar: React.FC = ({ children }) => {\n  return <div className={`${styles['nav-list']}`}>{children}</div>;\n};\n\nexport default Navbar;\n","import { default as QueryWrapper } from './QueryWrapper';\n\nexport default QueryWrapper;\n","import React from 'react';\nimport { LoadingSpinner, Message } from 'tapis-ui/_common';\n\ntype QueryWrapperProps = React.PropsWithChildren<{\n  isLoading: boolean;\n  error: Error | null;\n  className?: string;\n}>;\n\nconst QueryWrapper: React.FC<QueryWrapperProps> = ({\n  isLoading,\n  error,\n  children,\n  className = '',\n}) => {\n  if (isLoading) {\n    return (\n      <div className={className}>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={className}>\n        <Message canDismiss={false} type=\"error\" scope=\"inline\">\n          {(error as any).message ?? error}\n        </Message>\n      </div>\n    );\n  }\n  return <div className={className}>{children}</div>;\n};\n\nexport default QueryWrapper;\n","import SubmitWrapper from './SubmitWrapper';\n\nexport default SubmitWrapper;\n","import React from 'react';\nimport { LoadingSpinner, Message } from 'tapis-ui/_common';\nimport styles from './SubmitWrapper.module.scss';\n\ntype SubmitWrapperProps = React.PropsWithChildren<{\n  isLoading: boolean;\n  success: string | undefined;\n  error: Error | null;\n  className?: string;\n}>;\n\nconst SubmitWrapper: React.FC<SubmitWrapperProps> = ({\n  isLoading,\n  error,\n  success,\n  children,\n  className = '',\n}) => {\n  return (\n    <div className={`${className} ${styles.wrapper}`}>\n      {children}\n      {isLoading && (\n        <LoadingSpinner\n          className={styles['loading-spinner']}\n          placement=\"inline\"\n        />\n      )}\n      {error ? (\n        <Message canDismiss={false} type=\"error\" scope=\"inline\">\n          {(error as any)?.message ?? error}\n        </Message>\n      ) : (\n        success && (\n          <Message canDismiss={false} type=\"success\" scope=\"inline\">\n            {success}\n          </Message>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default SubmitWrapper;\n","import AppsNav from './AppsNav';\nexport default AppsNav;\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useList } from 'tapis-hooks/apps';\nimport { Apps } from '@tapis/tapis-typescript';\nimport { Navbar, NavItem } from 'tapis-ui/_wrappers/Navbar';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\n\nconst AppsNav: React.FC = () => {\n  const { data, isLoading, error } = useList();\n  const { url } = useRouteMatch();\n  const appList: Array<Apps.TapisApp> = data?.result ?? [];\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {appList.length ? (\n          appList.map((app) => (\n            <NavItem\n              to={`${url}/${app.id}/${app.version}`}\n              icon=\"applications\"\n              key={app.id}\n            >\n              {`${app.id} v${app.version}`}\n            </NavItem>\n          ))\n        ) : (\n          <i>No apps found</i>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default AppsNav;\n","import { Jobs } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (\n  params: Jobs.GetJobListRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Jobs.JobsApi = apiGenerator<Jobs.JobsApi>(\n    Jobs,\n    Jobs.JobsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Jobs.RespGetJobList>(() => api.getJobList(params));\n};\n\nexport default list;\n","import { Jobs } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst details = (params: Jobs.GetJobRequest, basePath: string, jwt: string) => {\n  const api: Jobs.JobsApi = apiGenerator<Jobs.JobsApi>(\n    Jobs,\n    Jobs.JobsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Jobs.RespGetJob>(() => api.getJob(params));\n};\n\nexport default details;\n","import { Jobs } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst submit = (\n  request: Jobs.ReqSubmitJob,\n  basePath: string,\n  jwt: string\n): Promise<Jobs.RespSubmitJob> => {\n  const api: Jobs.JobsApi = apiGenerator<Jobs.JobsApi>(\n    Jobs,\n    Jobs.JobsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Jobs.RespSubmitJob>(() =>\n    api.submitJob({ reqSubmitJob: request })\n  );\n};\n\nexport default submit;\n","const QueryKeys = {\n  list: 'jobs/list',\n  details: 'jobs/details',\n  submit: 'jobs/submit',\n};\n\nexport default QueryKeys;\n","import { useQuery } from 'react-query';\nimport { list } from 'tapis-api/jobs';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Jobs.GetJobListRequest = {\n  orderBy: 'created(desc)',\n};\n\nconst useList = (params: Jobs.GetJobListRequest = defaultParams) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Jobs.RespGetJobList, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token ?? ''),\n    {\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import { useQuery } from 'react-query';\nimport { details } from 'tapis-api/jobs';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useDetails = (jobUuid: string) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const params: Jobs.GetJobRequest = { jobUuid };\n  const result = useQuery<Jobs.RespGetJob, Error>(\n    [QueryKeys.details, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => details(params, basePath, accessToken?.access_token ?? ''),\n    {\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useDetails;\n","import { useEffect } from 'react';\nimport { useMutation } from 'react-query';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { submit } from 'tapis-api/jobs';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nconst useSubmit = (appId: string, appVersion: string) => {\n  const { basePath, accessToken } = useTapisConfig();\n  const jwt = accessToken?.access_token || '';\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, submit helper is called to perform the operation\n  const { mutate, isLoading, isError, isSuccess, data, error, reset } =\n    useMutation<Jobs.RespSubmitJob, Error, Jobs.ReqSubmitJob>(\n      [QueryKeys.submit, appId, appVersion, basePath, jwt],\n      (request: Jobs.ReqSubmitJob) => submit(request, basePath, jwt)\n    );\n\n  // We want this hook to automatically reset if a different appId or appVersion\n  // is passed to it. This eliminates the need to reset it inside the TSX component\n  useEffect(() => reset(), [reset, appId, appVersion]);\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    data,\n    error,\n    reset,\n    submit: (request: Jobs.ReqSubmitJob) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate(request);\n    },\n  };\n};\n\nexport default useSubmit;\n","import JobsNav from './JobsNav';\n\nexport default JobsNav;\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useList } from 'tapis-hooks/jobs';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { Navbar, NavItem } from 'tapis-ui/_wrappers/Navbar';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\n\nconst JobsNav: React.FC = () => {\n  const { data, isLoading, error } = useList();\n  const { url } = useRouteMatch();\n  const jobsList: Array<Jobs.JobListDTO> = data?.result ?? [];\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {jobsList.length ? (\n          jobsList.map((job: Jobs.JobListDTO) => (\n            <NavItem to={`${url}/${job.uuid}`} icon=\"jobs\" key={job.uuid}>\n              {`${job.name} - (${job.status})`}\n            </NavItem>\n          ))\n        ) : (\n          <i>No jobs found</i>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default JobsNav;\n","import { Systems } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (\n  params: Systems.GetSystemsRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Systems.SystemsApi = apiGenerator<Systems.SystemsApi>(\n    Systems,\n    Systems.SystemsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Systems.RespSystems>(() => api.getSystems(params));\n};\n\nexport default list;\n","const QueryKeys = {\n  list: 'systems/list',\n};\n\nexport default QueryKeys;\n","import { useQuery } from 'react-query';\nimport { list } from 'tapis-api/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\nexport const defaultParams: Systems.GetSystemsRequest = {};\n\nconst useList = (params: Systems.GetSystemsRequest = defaultParams) => {\n  const { accessToken, basePath } = useTapisConfig();\n  const result = useQuery<Systems.RespSystems, Error>(\n    [QueryKeys.list, params, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    () => list(params, basePath, accessToken?.access_token || ''),\n    {\n      enabled: !!accessToken,\n    }\n  );\n  return result;\n};\n\nexport default useList;\n","import { default as JobLauncher } from './JobLauncher';\n\nexport default JobLauncher;\n","import React from 'react';\nimport { useList } from 'tapis-hooks/systems';\nimport { useSubmit } from 'tapis-hooks/jobs';\nimport { Formik, Form } from 'formik';\nimport FieldWrapper, { FieldWrapperProps } from 'tapis-ui/_common/FieldWrapper';\nimport { TapisSystem } from '@tapis/tapis-typescript-systems';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport * as Yup from 'yup';\nimport { Button, Input } from 'reactstrap';\n\nexport type OnSubmitCallback = (job: Jobs.Job) => any;\n\ninterface JobLauncherProps {\n  appId: string;\n  appVersion: string;\n  name: string;\n  execSystemId: string;\n}\n\nconst JobLauncher: React.FC<JobLauncherProps> = ({\n  appId,\n  appVersion,\n  name,\n  execSystemId,\n}) => {\n  const systemsListHook = useList({});\n  const { submit, isLoading, error, data } = useSubmit(appId, appVersion);\n\n  const systems: Array<TapisSystem> = systemsListHook.data?.result ?? [];\n\n  const validationSchema = (\n    props: React.PropsWithChildren<React.ReactNode>\n  ) => {\n    return Yup.lazy((values: any) => {\n      const schema = Yup.object({});\n      return schema;\n    });\n  };\n  const formSubmit = (\n    values: any,\n    { setSubmitting }: { setSubmitting: any }\n  ) => {\n    submit(values as Jobs.ReqSubmitJob);\n    setSubmitting(false);\n  };\n\n  const initialValues = Jobs.ReqSubmitJobFromJSON({\n    appId,\n    appVersion,\n    name,\n    execSystemId,\n  });\n\n  const jobFields: Array<FieldWrapperProps> = [\n    {\n      props: {\n        name: 'name',\n        type: 'string',\n      },\n      description: 'A name for this job',\n      label: 'Name',\n      required: true,\n      children: <Input bsSize=\"sm\" />,\n    },\n    {\n      props: {\n        name: 'appId',\n        type: 'string',\n      },\n      description: 'The ID of the TAPIS application to run',\n      label: 'App ID',\n      required: true,\n      children: <Input bsSize=\"sm\" data-testid=\"appId\" />,\n    },\n    {\n      props: {\n        name: 'appVersion',\n        type: 'string',\n      },\n      description: 'The version of the application to run',\n      label: 'App Version',\n      required: true,\n      children: <Input bsSize=\"sm\" />,\n    },\n    {\n      props: {\n        name: 'execSystemId',\n        type: 'select',\n      },\n      description: 'A TAPIS system that can run this application',\n      label: 'Execution System',\n      required: true,\n      children: (\n        <Input>\n          {systems.map((system: TapisSystem) => (\n            <option key={system.id}>{system.id}</option>\n          ))}\n        </Input>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        enableReinitialize={true}\n        validationSchema={validationSchema}\n        onSubmit={formSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            {jobFields.map((field) => {\n              return (\n                <FieldWrapper\n                  props={field.props}\n                  label={field.label}\n                  required={field.required}\n                  children={field.children}\n                  description={field.description}\n                  key={field.props.name}\n                />\n              );\n            })}\n            <SubmitWrapper\n              error={error}\n              isLoading={isLoading}\n              success={\n                data && `Successfully submitted job ${data?.result?.uuid ?? ''}`\n              }\n            >\n              <Button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={isSubmitting || isLoading || !!error}\n              >\n                Submit Job\n              </Button>\n            </SubmitWrapper>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default JobLauncher;\n","import { default as JobDetail } from './JobDetail';\n\nexport default JobDetail;\n","import React from 'react';\nimport { useDetails } from 'tapis-hooks/jobs';\nimport { Jobs } from '@tapis/tapis-typescript';\nimport { DescriptionList } from 'tapis-ui/_common';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\n\ninterface JobDetailProps {\n  jobUuid: string;\n}\n\nconst JobDetail: React.FC<JobDetailProps> = ({ jobUuid }) => {\n  const { data, isLoading, error } = useDetails(jobUuid);\n  const job: Jobs.Job | undefined = data?.result;\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <h3>{job?.name}</h3>\n      <h5>{job?.uuid}</h5>\n      {job && <DescriptionList data={job} />}\n    </QueryWrapper>\n  );\n};\n\nexport default JobDetail;\n","import { useDetail as useAppDetail } from 'tapis-hooks/apps';\nimport { JobLauncher } from 'tapis-ui/components/jobs';\n\nconst JobLauncherWrapper: React.FC<{ appId: string; appVersion: string }> = ({\n  appId,\n  appVersion,\n}) => {\n  const { data: appData } = useAppDetail({ appId, appVersion });\n  const appDetails = appData?.result;\n  const execSystemId = appDetails?.jobAttributes?.execSystemId ?? '';\n  const name = `${appId}-${appVersion}-${new Date()\n    .toISOString()\n    .slice(0, -5)}`;\n\n  return (\n    <>\n      {appDetails && (\n        <JobLauncher\n          appId={appId}\n          appVersion={appVersion}\n          name={name}\n          execSystemId={execSystemId}\n        />\n      )}\n    </>\n  );\n};\n\nexport default JobLauncherWrapper;\n","import React from 'react';\nimport styles from './Layout.module.scss';\n\ninterface LayoutProps {\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  top?: React.ReactNode;\n  bottom?: React.ReactNode;\n}\nconst Layout: React.FC<LayoutProps> = ({ left, right, top, bottom }) => (\n  <div className={styles['layout-root']}>\n    {top}\n    <div className={styles['layout-row']}>\n      {left}\n      {right}\n    </div>\n    {bottom}\n  </div>\n);\n\nexport default Layout;\n","import React from 'react';\nimport { SectionHeader as CommonSectionHeader } from 'tapis-ui/_common';\nimport styles from './Section.module.scss';\n\nexport const SectionHeader: React.FC<\n  React.PropsWithChildren<{ type?: string }>\n> = ({ children, type }) => {\n  return (\n    <div className={type && styles[type]}>\n      <CommonSectionHeader>{children}</CommonSectionHeader>\n    </div>\n  );\n};\n\nexport const SectionNavWrapper: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  return <div className={styles.nav}>{children}</div>;\n};\n\nexport const SectionBody: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  return (\n    <div className={styles.body}>\n      <div className={styles.detail}>{children}</div>\n    </div>\n  );\n};\n","import Apps from './Apps';\n\nexport default Apps;\n","import React from 'react';\nimport { Route, useRouteMatch, RouteComponentProps } from 'react-router-dom';\nimport { AppsNav } from 'tapis-ui/components/apps';\nimport { JobLauncher } from 'tapis-app/Sections/Apps/JobLauncher';\nimport { SectionMessage } from 'tapis-ui/_common';\nimport { Layout } from 'tapis-app/Layout';\nimport {\n  SectionBody,\n  SectionHeader,\n  SectionNavWrapper,\n} from 'tapis-app/Sections/Section';\n\nconst Apps: React.FC = () => {\n  const { path } = useRouteMatch();\n\n  const header = (\n    <SectionHeader>\n      <div>Apps</div>\n    </SectionHeader>\n  );\n\n  const subHeader = (\n    <SectionHeader type={'sub-header'}>Job Launcher</SectionHeader>\n  );\n\n  const sidebar = (\n    <SectionNavWrapper>\n      <AppsNav />\n    </SectionNavWrapper>\n  );\n\n  const body = (\n    <div style={{ flex: 1 }}>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">\n          Select an app from the list.\n        </SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:appId/:appVersion`}\n        render={({\n          match: {\n            params: { appVersion, appId },\n          },\n        }: RouteComponentProps<{\n          appId: string;\n          appVersion: string;\n        }>) => <JobLauncher appId={appId} appVersion={appVersion} />}\n      />\n    </div>\n  );\n\n  return (\n    <Layout\n      top={header}\n      left={sidebar}\n      right={\n        <SectionBody>\n          <Layout top={subHeader} right={body} />\n        </SectionBody>\n      }\n    />\n  );\n};\n\nexport default Apps;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { SectionHeader, LoadingSpinner, Icon } from 'tapis-ui/_common';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  CardText,\n} from 'reactstrap';\nimport { useTapisConfig } from 'tapis-hooks';\nimport { useList as useSystemsList } from 'tapis-hooks/systems';\nimport { useList as useJobsList } from 'tapis-hooks/jobs';\nimport { useList as useAppsList } from 'tapis-hooks/apps';\nimport styles from './Dashboard.module.scss';\nimport './Dashboard.scss';\n\ntype DashboardCardProps = {\n  icon: string;\n  link: string;\n  counter: string;\n  name: string;\n  text: string;\n  loading: boolean;\n};\n\nconst DashboardCard: React.FC<DashboardCardProps> = ({\n  icon,\n  link,\n  counter,\n  name,\n  text,\n  loading,\n}) => {\n  return (\n    <Card className={styles.card}>\n      <CardHeader>\n        <div className={styles['card-header']}>\n          <div>\n            <Icon name={icon} className=\"dashboard__card-icon\" />\n          </div>\n          <div>{name}</div>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <CardTitle tag=\"h5\">\n          {loading ? (\n            <LoadingSpinner placement=\"inline\" />\n          ) : (\n            <div>{counter}</div>\n          )}\n        </CardTitle>\n        <CardText>{text}</CardText>\n      </CardBody>\n      <CardFooter className={styles['card-footer']}>\n        <Link to={link}>Go to {name}</Link>\n        <Icon name=\"push-right\" />\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst Dashboard: React.FC = () => {\n  const { accessToken } = useTapisConfig();\n  const systems = useSystemsList({});\n  const jobs = useJobsList({});\n  const apps = useAppsList({ select: 'jobAttributes,version' });\n\n  return (\n    <div>\n      <SectionHeader className=\"dashboard__section-header\">\n        Dashboard for {process.env.REACT_APP_TAPIS_TENANT_URL}\n      </SectionHeader>\n      <div className={styles.header}>\n        <h5>Welcome to TAPIS-UI</h5>\n        <div>\n          This web application demonstrates how to leverage the TAPIS API and{' '}\n          <i>tapis-ui</i> React components to build a serverless interface for\n          High Performance Computing systems.\n        </div>\n      </div>\n      <div className={styles.cards}>\n        {accessToken ? (\n          <>\n            <DashboardCard\n              icon=\"data-files\"\n              name=\"Systems\"\n              text=\"Access TAPIS systems and files\"\n              link=\"/systems\"\n              counter={`${systems?.data?.result?.length} systems`}\n              loading={systems?.isLoading}\n            />\n            <DashboardCard\n              icon=\"applications\"\n              name=\"Applications\"\n              text=\"View TAPIS applications and launch jobs\"\n              link=\"/apps\"\n              counter={`${apps?.data?.result?.length} apps`}\n              loading={apps?.isLoading}\n            />\n            <DashboardCard\n              icon=\"jobs\"\n              name=\"Jobs\"\n              text=\"View status and details for previously launched TAPIS jobs\"\n              link=\"/jobs\"\n              counter={`${jobs?.data?.result?.length} jobs`}\n              loading={jobs?.isLoading}\n            />\n          </>\n        ) : (\n          <Card>\n            <CardHeader>\n              <div className={styles['card-header']}>\n                <div>\n                  <Icon name=\"user\" className=\"dashboard__card-icon\" />\n                </div>\n                <div>You are not logged in</div>\n              </div>\n            </CardHeader>\n            <CardBody>\n              <CardTitle>Please log in to use TAPIS</CardTitle>\n            </CardBody>\n            <CardFooter className={styles['card-footer']}>\n              <Link to=\"/login\">Proceed to login</Link>\n              <Icon name=\"push-right\" />\n            </CardFooter>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { default as Dashboard } from './Dashboard';\n\nexport default Dashboard;\n","import Jobs from './Jobs';\n\nexport default Jobs;\n","import React from 'react';\nimport { Route, useRouteMatch, RouteComponentProps } from 'react-router-dom';\nimport { JobsNav, JobDetail } from 'tapis-ui/components/jobs';\nimport { SectionMessage } from 'tapis-ui/_common';\nimport { Layout } from 'tapis-app/Layout';\nimport {\n  SectionBody,\n  SectionHeader,\n  SectionNavWrapper,\n} from 'tapis-app/Sections/Section';\n\nconst Jobs: React.FC = () => {\n  const { path } = useRouteMatch();\n\n  const header = (\n    <SectionHeader>\n      <div>Jobs</div>\n    </SectionHeader>\n  );\n\n  const subHeader = (\n    <SectionHeader type={'sub-header'}>Job Details</SectionHeader>\n  );\n\n  const sidebar = (\n    <SectionNavWrapper>\n      <JobsNav />\n    </SectionNavWrapper>\n  );\n\n  const body = (\n    <div style={{ flex: 1 }}>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">Select a job from the list.</SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:jobUuid`}\n        render={({\n          match: {\n            params: { jobUuid },\n          },\n        }: RouteComponentProps<{ jobUuid: string }>) => (\n          <JobDetail jobUuid={jobUuid} />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <Layout\n      top={header}\n      left={sidebar}\n      right={\n        <SectionBody>\n          <Layout top={subHeader} right={body} />\n        </SectionBody>\n      }\n    />\n  );\n};\n\nexport default Jobs;\n","import { Authenticator } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\n// This helper takes the username and password and assembles an API call\nconst login = (\n  username: string,\n  password: string,\n  basePath: string\n): Promise<Authenticator.RespCreateToken> => {\n  const reqCreateToken: Authenticator.ReqCreateToken = {\n    username,\n    password,\n    grant_type: 'password',\n  };\n  const request: Authenticator.CreateTokenRequest = {\n    reqCreateToken,\n  };\n\n  const api: Authenticator.TokensApi = apiGenerator<Authenticator.TokensApi>(\n    Authenticator,\n    Authenticator.TokensApi,\n    basePath,\n    null\n  );\n\n  return errorDecoder(() => api.createToken(request));\n};\n\nexport default login;\n","const QueryKeys = {\n  login: 'authenticator/login',\n};\n\nexport default QueryKeys;\n","import { useMutation } from 'react-query';\nimport { Authenticator } from '@tapis/tapis-typescript';\nimport { login } from 'tapis-api/authenticator';\nimport { useTapisConfig } from 'tapis-hooks';\nimport QueryKeys from './queryKeys';\n\ntype LoginHookParams = {\n  username: string;\n  password: string;\n};\n\nconst useLogin = () => {\n  const { setAccessToken, basePath } = useTapisConfig();\n\n  // On successful login, save the token to the TapisContext state\n  const onSuccess = (response: Authenticator.RespCreateToken) => {\n    setAccessToken(response?.result?.access_token);\n  };\n\n  // The useMutation react-query hook is used to call operations that make server-side changes\n  // (Other hooks would be used for data retrieval)\n  //\n  // In this case, loginHelper is called to perform the operation, with an onSuccess callback\n  // passed as an option\n  const { mutate, isLoading, isError, isSuccess, error } = useMutation<\n    Authenticator.RespCreateToken,\n    Error,\n    LoginHookParams\n  >(\n    [QueryKeys.login, basePath],\n    ({ username, password }) => login(username, password, basePath),\n    { onSuccess }\n  );\n\n  // Return hook object with loading states and login function\n  return {\n    isLoading,\n    isError,\n    isSuccess,\n    error,\n    login: (username: string, password: string) => {\n      // Call mutate to trigger a single post-like API operation\n      return mutate({ username, password });\n    },\n    logout: () => setAccessToken(null),\n  };\n};\n\nexport default useLogin;\n","import Login from './Login';\n\nexport default Login;\n","import React from 'react';\nimport { Input, Button } from 'reactstrap';\nimport { useLogin } from 'tapis-hooks/authenticator';\nimport { useTapisConfig } from 'tapis-hooks/context';\nimport { Formik, Form } from 'formik';\nimport { FieldWrapper } from 'tapis-ui/_common';\nimport { SubmitWrapper } from 'tapis-ui/_wrappers';\nimport * as Yup from 'yup';\n\nconst Login: React.FC = () => {\n  const { login, isLoading, error } = useLogin();\n  const { accessToken } = useTapisConfig();\n\n  const validationSchema = (props: any) => {\n    return Yup.lazy((values: any) => {\n      const schema = Yup.object({\n        username: Yup.string().required().min(1),\n        password: Yup.string().required().min(1),\n      });\n      return schema;\n    });\n  };\n\n  const formSubmit = (\n    values: any,\n    { setSubmitting }: { setSubmitting: any }\n  ) => {\n    const { username, password } = values;\n    login(username, password);\n    setSubmitting(false);\n  };\n\n  const initialValues = {\n    username: '',\n    password: '',\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={formSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <FieldWrapper\n            label=\"Username\"\n            required={true}\n            description=\"Your TAPIS username\"\n            props={{ name: 'username', type: 'string' }}\n          >\n            <Input bsSize=\"sm\" />\n          </FieldWrapper>\n          <FieldWrapper\n            label=\"Password\"\n            required={true}\n            description=\"Your TAPIS password\"\n            props={{ name: 'password', type: 'password' }}\n          >\n            <Input bsSize=\"sm\" />\n          </FieldWrapper>\n          <SubmitWrapper\n            isLoading={isLoading}\n            error={error}\n            success={accessToken && 'Successfully logged in'}\n          >\n            <Button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              disabled={isSubmitting || isLoading || accessToken != null}\n            >\n              Log In\n            </Button>\n          </SubmitWrapper>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Login;\n","import { default as Login } from './Login';\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Login as TapisLogin } from 'tapis-ui/components/authenticator';\nimport { SectionHeader } from 'tapis-ui/_common';\nimport { useTapisConfig } from 'tapis-hooks';\n\nconst Login: React.FC = () => {\n  const { accessToken } = useTapisConfig();\n\n  if (accessToken?.access_token) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <>\n      <SectionHeader>Login</SectionHeader>\n      <div className=\"container\">\n        <TapisLogin />\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import SystemsNav from './SystemsNav';\n\nexport default SystemsNav;\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useList } from 'tapis-hooks/systems';\nimport { Systems } from '@tapis/tapis-typescript';\nimport { Navbar, NavItem } from 'tapis-ui/_wrappers/Navbar';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\n\nconst SystemsNav: React.FC = () => {\n  const { url } = useRouteMatch();\n  // Get a systems listing with default request params\n  const { data, isLoading, error } = useList();\n  const definitions: Array<Systems.TapisSystem> = data?.result ?? [];\n\n  return (\n    <QueryWrapper isLoading={isLoading} error={error}>\n      <Navbar>\n        {definitions.length ? (\n          definitions.map((system) => (\n            <NavItem\n              to={`${url}/${system.id}`}\n              icon=\"data-files\"\n              key={system.id}\n            >\n              {`${system.id} (${system.host})`}\n            </NavItem>\n          ))\n        ) : (\n          <i>No systems found</i>\n        )}\n      </Navbar>\n    </QueryWrapper>\n  );\n};\n\nexport default SystemsNav;\n","import { Files } from '@tapis/tapis-typescript';\nimport { apiGenerator, errorDecoder } from 'tapis-api/utils';\n\nconst list = (\n  params: Files.ListFilesRequest,\n  basePath: string,\n  jwt: string\n) => {\n  const api: Files.FileOperationsApi = apiGenerator<Files.FileOperationsApi>(\n    Files,\n    Files.FileOperationsApi,\n    basePath,\n    jwt\n  );\n  return errorDecoder<Files.FileListingResponse>(() => api.listFiles(params));\n};\n\nexport default list;\n","const QueryKeys = {\n  list: 'files/list',\n};\n\nexport default QueryKeys;\n","import { useInfiniteQuery } from 'react-query';\nimport { list } from 'tapis-api/files';\nimport { Files } from '@tapis/tapis-typescript';\nimport { useTapisConfig } from 'tapis-hooks';\nimport {\n  concatResults,\n  tapisNextPageParam,\n} from 'tapis-hooks/utils/infiniteQuery';\nimport QueryKeys from './queryKeys';\n\n// Does not use defaultParams because systemId and path are required\nconst useList = (params: Files.ListFilesRequest) => {\n  const { accessToken, basePath } = useTapisConfig();\n\n  // Set default limit to 100, as per TAPIS OpenAPI spec\n  params.limit = params.limit ?? 100;\n\n  const result = useInfiniteQuery<Files.FileListingResponse, Error>(\n    [QueryKeys.list, params.systemId, params.path, accessToken],\n    // Default to no token. This will generate a 403 when calling the list function\n    // which is expected behavior for not having a token\n    ({ pageParam = params }) =>\n      list(pageParam, basePath, accessToken?.access_token ?? ''),\n    {\n      // getNextPageParam function computes offset, with guarantee that\n      // params.limit is set to default of 100\n      getNextPageParam: (lastPage, allPages) =>\n        tapisNextPageParam<Files.FileListingResponse>(\n          lastPage,\n          allPages,\n          params\n        ),\n      enabled: !!accessToken,\n    }\n  );\n\n  // If there are result pages, concatenate the results\n  const concatenatedResults = result.data?.pages\n    ? concatResults<Files.FileInfo>(result.data.pages)\n    : null;\n\n  return {\n    ...result,\n    concatenatedResults,\n  };\n};\n\nexport default useList;\n","export type ResultPages<T> = { result?: T[] }[];\n\nexport const concatResults = <T>(pages: ResultPages<T>): T[] =>\n  pages.reduce(\n    (accumulator: T[], current) => accumulator.concat(current.result ?? []),\n    []\n  );\n\nexport const tapisNextPageParam = <T extends { result?: Array<any> }>(\n  lastPage: T,\n  allPages: T[],\n  params: { limit?: number }\n) => {\n  if ((lastPage.result?.length ?? 0) < params.limit!) return undefined;\n  return { ...params, offset: allPages.length * params.limit! };\n};\n","import React, { useCallback } from 'react';\nimport { useList } from 'tapis-hooks/files';\nimport { Files } from '@tapis/tapis-typescript';\nimport { Icon } from 'tapis-ui/_common';\nimport { Button } from 'reactstrap';\nimport { QueryWrapper } from 'tapis-ui/_wrappers';\nimport styles from './FileListing.module.scss';\n\nexport type OnSelectCallback = (file: Files.FileInfo) => any;\n\ninterface FileListingItemProps {\n  file: Files.FileInfo;\n  onSelect?: OnSelectCallback;\n}\n\nconst FileListingItem: React.FC<FileListingItemProps> = ({\n  file,\n  onSelect = undefined,\n}) => {\n  return (\n    <li onClick={() => (onSelect ? onSelect(file) : null)}>\n      {/* will need to conditionally set file icon */}\n      <Icon name=\"file\" /> {`${file.name}`}\n    </li>\n  );\n};\n\ninterface FileListingProps {\n  systemId: string;\n  path: string;\n  onSelect?: OnSelectCallback;\n}\n\nconst FileListing: React.FC<FileListingProps> = ({\n  systemId,\n  path,\n  onSelect = undefined,\n}) => {\n  const { hasNextPage, isLoading, error, fetchNextPage, concatenatedResults } =\n    useList({ systemId, path });\n\n  const fileSelectCallback = useCallback<OnSelectCallback>(\n    (file: Files.FileInfo) => {\n      if (onSelect) {\n        onSelect(file);\n      }\n    },\n    [onSelect]\n  );\n\n  const files: Array<Files.FileInfo> = concatenatedResults ?? [];\n\n  return (\n    <QueryWrapper\n      className={styles['file-list']}\n      isLoading={isLoading}\n      error={error}\n    >\n      {files.map((file: Files.FileInfo | null) => {\n        return (\n          file && (\n            <FileListingItem\n              file={file}\n              key={file.name}\n              onSelect={fileSelectCallback}\n            />\n          )\n        );\n      })}\n      {hasNextPage && <Button onClick={() => fetchNextPage()}>More...</Button>}\n    </QueryWrapper>\n  );\n};\n\nexport default FileListing;\n","import FileListing from './FileListing';\n\nexport default FileListing;\n","import Systems from './Systems';\n\nexport default Systems;\n","import React from 'react';\nimport { Route, useRouteMatch, RouteComponentProps } from 'react-router-dom';\nimport { SystemsNav } from 'tapis-ui/components/systems';\nimport { FileListing } from 'tapis-ui/components/files';\nimport { SectionMessage } from 'tapis-ui/_common';\nimport { Layout } from 'tapis-app/Layout';\nimport {\n  SectionBody,\n  SectionNavWrapper,\n  SectionHeader,\n} from 'tapis-app/Sections/Section';\n\nconst Systems: React.FC = () => {\n  const { path } = useRouteMatch();\n\n  const header = (\n    <SectionHeader>\n      <div>System List</div>\n    </SectionHeader>\n  );\n\n  const subHeader = <SectionHeader type={'sub-header'}>Files</SectionHeader>;\n\n  const sidebar = (\n    <SectionNavWrapper>\n      <SystemsNav />\n    </SectionNavWrapper>\n  );\n\n  const body = (\n    <div style={{ flex: 1 }}>\n      <Route path={`${path}`} exact>\n        <SectionMessage type=\"info\">\n          Select a system from the list.\n        </SectionMessage>\n      </Route>\n\n      <Route\n        path={`${path}/:systemId`}\n        render={({\n          match: {\n            params: { systemId },\n          },\n        }: RouteComponentProps<{ systemId: string }>) => (\n          <FileListing systemId={systemId} path={'/'} />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <Layout\n      top={header}\n      left={sidebar}\n      right={\n        <SectionBody>\n          <Layout top={subHeader} right={body} />\n        </SectionBody>\n      }\n    />\n  );\n};\n\nexport default Systems;\n","import React from 'react';\nimport { useTapisConfig } from 'tapis-hooks';\nimport styles from './Sidebar.module.scss';\nimport { Navbar, NavItem } from 'tapis-ui/_wrappers/Navbar';\n\nconst Sidebar: React.FC = () => {\n  const { accessToken } = useTapisConfig();\n  return (\n    <div className={styles.root}>\n      <Navbar>\n        <NavItem to=\"/\" icon=\"dashboard\">\n          Dashboard\n        </NavItem>\n        {!accessToken && (\n          <NavItem to=\"/login\" icon=\"user\">\n            Login\n          </NavItem>\n        )}\n        {accessToken && (\n          <>\n            <NavItem to=\"/systems\" icon=\"data-files\">\n              Systems\n            </NavItem>\n            <NavItem to=\"/apps\" icon=\"applications\">\n              Apps\n            </NavItem>\n            <NavItem to=\"/jobs\" icon=\"jobs\">\n              Jobs\n            </NavItem>\n            <NavItem to=\"/logout\" icon=\"user\">\n              Logout\n            </NavItem>\n          </>\n        )}\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { InlineMessage, SectionMessage } from 'tapis-ui/_common';\nimport styles from './UIPatternsMessage.module.scss';\n\nconst EXAMPLE_LINK = {\n  short: (\n    <a\n      href={window.location.href}\n      onClick={(e) => e.preventDefault()}\n      className=\"wb-link\"\n    >\n      Example link\n    </a>\n  ),\n  long: (\n    <a\n      href={window.location.href}\n      onClick={(e) => e.preventDefault()}\n      className=\"wb-link\"\n    >\n      Example link can be a complete sentence.\n    </a>\n  ),\n};\nconst EXAMPLE_TEXT = {\n  info: {\n    short: 'You exist.',\n    long: 'All your information, are belong to us.',\n  },\n  success: {\n    short: 'We did well.',\n    long: 'All your success, are belong to us.',\n  },\n  warn: {\n    short: 'You did poorly.',\n    long: 'All your warning, are come from us.',\n  },\n  error: {\n    short: 'You failed.',\n    long: 'All your error, are belong to you.',\n  },\n};\n\nconst NOTIFICATION_TEXT = (\n  <em>\n    Can not render in isolation. See{' '}\n    <a\n      href=\"https://xd.adobe.com/view/db2660cc-1011-4f26-5d31-019ce87c1fe8-ad17/screen/3821fc3e-bda1-40d4-9e50-a514e90aa088/\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      Adobe Design.\n    </a>\n  </em>\n);\n\nfunction UIPatternsMessages() {\n  return (\n    <table className={styles.container}>\n      <thead>\n        <tr>\n          <th scope=\"row\" className={styles.secondary}>\n            component\n          </th>\n          <th scope=\"col\">\n            <code>&lt;InlineMessage&gt;</code>\n            <code>&lt;Message scope=&quot;inline&quot;&gt;</code>\n          </th>\n          <th scope=\"col\">\n            <code>&lt;SectionMessage (canDismiss)&gt;</code>\n            <code>&lt;Message scope=&quot;section&quot; (canDismiss)&gt;</code>\n          </th>\n          <th scope=\"col\">\n            <code>\n              <s>&lt;AppMessage&gt;</s>\n            </code>\n            <code>&lt;NotifcationToast&gt;</code>\n          </th>\n        </tr>\n        <tr>\n          <th scope=\"row\" className={styles.secondary}>\n            <code>scope</code>\n          </th>\n          <th scope=\"col\">\n            <code>inline</code>\n          </th>\n          <th scope=\"col\">\n            <code>section</code>\n          </th>\n          <th scope=\"col\">\n            <code>app</code>\n          </th>\n        </tr>\n        <tr>\n          <th scope=\"col\" className={styles.secondary}>\n            <code>type</code>\n          </th>\n          <td>\n            When to Use\n            <ul>\n              <li>action result statement in table row</li>\n              <li>message when table can not load data</li>\n            </ul>\n          </td>\n          <td>\n            When to Use\n            <ul>\n              <li>warning at the top of a form</li>\n              <li>message after successful submission of form</li>\n            </ul>\n          </td>\n          <td>\n            When to Use\n            <ul>\n              <li>user action is required</li>\n              <li>important user-initiated action is completed</li>\n              <li>security concern</li>\n              <li>milestone for time-sensitive activity</li>\n            </ul>\n          </td>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">\n            <code>info</code>\n          </th>\n          <td>\n            <InlineMessage type=\"info\">\n              {EXAMPLE_TEXT.info.long} {EXAMPLE_LINK.short}\n            </InlineMessage>\n            <hr />\n            <InlineMessage type=\"info\">\n              {EXAMPLE_TEXT.info.short} {EXAMPLE_LINK.long}\n            </InlineMessage>\n          </td>\n          <td>\n            <SectionMessage type=\"info\">\n              {EXAMPLE_TEXT.info.long} {EXAMPLE_LINK.short}\n            </SectionMessage>\n            <SectionMessage type=\"info\" canDismiss>\n              {EXAMPLE_TEXT.info.short} {EXAMPLE_LINK.long}\n            </SectionMessage>\n          </td>\n          <td rowSpan=\"2\">{NOTIFICATION_TEXT}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">\n            <code>success</code>\n          </th>\n          <td>\n            <InlineMessage type=\"success\">\n              {EXAMPLE_TEXT.success.long} {EXAMPLE_LINK.short}\n            </InlineMessage>\n            <hr />\n            <InlineMessage type=\"success\">\n              {EXAMPLE_TEXT.success.short} {EXAMPLE_LINK.long}\n            </InlineMessage>\n          </td>\n          <td>\n            <SectionMessage type=\"success\">\n              {EXAMPLE_TEXT.success.long} {EXAMPLE_LINK.short}\n            </SectionMessage>\n            <SectionMessage type=\"success\" canDismiss>\n              {EXAMPLE_TEXT.success.short} {EXAMPLE_LINK.long}\n            </SectionMessage>\n          </td>\n          {/* <td /> */}\n        </tr>\n        <tr>\n          <th scope=\"row\">\n            <code>warn</code>\n          </th>\n          <td>\n            <InlineMessage type=\"warn\">\n              {EXAMPLE_TEXT.warn.long} {EXAMPLE_LINK.short}\n            </InlineMessage>\n            <hr />\n            <InlineMessage type=\"warn\">\n              {EXAMPLE_TEXT.warn.short} {EXAMPLE_LINK.long}\n            </InlineMessage>\n          </td>\n          <td>\n            <SectionMessage type=\"warn\">\n              {EXAMPLE_TEXT.warn.long} {EXAMPLE_LINK.short}\n            </SectionMessage>\n            <SectionMessage type=\"warn\" canDismiss>\n              {EXAMPLE_TEXT.warn.short} {EXAMPLE_LINK.long}\n            </SectionMessage>\n          </td>\n          <td rowSpan=\"2\" className={styles['is-row-end']}>\n            {NOTIFICATION_TEXT}\n          </td>\n        </tr>\n        <tr>\n          <th scope=\"row\">\n            <code>error</code>\n          </th>\n          <td>\n            <InlineMessage type=\"error\">\n              {EXAMPLE_TEXT.error.long} {EXAMPLE_LINK.short}\n            </InlineMessage>\n            <hr />\n            <InlineMessage type=\"error\">\n              {EXAMPLE_TEXT.error.short} {EXAMPLE_LINK.long}\n            </InlineMessage>\n          </td>\n          <td>\n            <SectionMessage type=\"error\">\n              {EXAMPLE_TEXT.error.long} {EXAMPLE_LINK.short}\n            </SectionMessage>\n            <SectionMessage type=\"error\" canDismiss>\n              {EXAMPLE_TEXT.error.short} {EXAMPLE_LINK.long}\n            </SectionMessage>\n          </td>\n          {/* <td /> */}\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default UIPatternsMessages;\n","import React from 'react';\nimport { DescriptionList, Icon } from 'tapis-ui/_common';\n\nimport styles from './UIPatternsDescriptionList.module.css';\n\nconst DATA = {\n  Username: 'bobward500',\n  Prefix: 'Mr.',\n  Name: 'Bob Ward',\n  Suffix: 'The 5th',\n  'Favorite Numeric Value': 5,\n  Icon: <Icon name=\"dashboard\" />,\n};\n\nfunction UIPatternsDropdownSelector() {\n  return (\n    <>\n      <div className={styles['list-cols']}>\n        <dl>\n          <dt>Vertical Layout & Default Density</dt>\n          <dd>\n            <DescriptionList data={DATA} />\n          </dd>\n        </dl>\n        <dl>\n          <dt>Vertical Layout & Compact Density</dt>\n          <dd>\n            <DescriptionList data={DATA} density=\"compact\" />\n          </dd>\n        </dl>\n        <dl>\n          <dt>Vertical Layout & Compact Density - Narrow Container</dt>\n          <dd>\n            <DescriptionList\n              data={DATA}\n              density=\"compact\"\n              className={styles['item-x-narrow']}\n            />\n          </dd>\n        </dl>\n      </div>\n      <div className={styles['list-rows']}>\n        <dl>\n          <dt>Horizontal Layout & Default Density</dt>\n          <dd>\n            <DescriptionList data={DATA} direction=\"horizontal\" />\n          </dd>\n          <dt>Horizontal Layout & Compact Density</dt>\n          <dd>\n            <DescriptionList\n              data={DATA}\n              density=\"compact\"\n              direction=\"horizontal\"\n            />\n          </dd>\n          <dt>Horizontal Layout & Compact Density - Narrow Container</dt>\n          <dd>\n            <DescriptionList\n              data={DATA}\n              density=\"compact\"\n              direction=\"horizontal\"\n              className={styles['item-narrow']}\n            />\n          </dd>\n        </dl>\n      </div>\n      <div className={styles['list-rows']}>\n        <dl>\n          <dt>Vertical Layout & Nested Data</dt>\n          <dd>\n            <DescriptionList\n              data={{\n                'Nested List One': (\n                  <DescriptionList data={DATA} direction=\"vertical\" />\n                ),\n                'Nested List Two': (\n                  <DescriptionList data={DATA} direction=\"vertical\" />\n                ),\n              }}\n            />\n          </dd>\n          <dt>Horizontal Layout & Nested Data</dt>\n          <dd>\n            <DescriptionList\n              data={{\n                'Nested List One': (\n                  <DescriptionList data={DATA} direction=\"horizontal\" />\n                ),\n                'Nested List Two': (\n                  <DescriptionList data={DATA} direction=\"horizontal\" />\n                ),\n              }}\n              direction=\"vertical\"\n            />\n          </dd>\n        </dl>\n      </div>\n    </>\n  );\n}\n\nexport default UIPatternsDropdownSelector;\n","import React from 'react';\nimport { DropdownSelector } from 'tapis-ui/_common';\n\nfunction UIPatternsDropdownSelector() {\n  return (\n    <dl>\n      <dt>\n        Default (<code>single</code>)\n      </dt>\n      <dd>\n        <small>Only field (not dropdown) can be styled cross-browser.</small>\n        <DropdownSelector>\n          <optgroup label=\"Cryptographic People\">\n            <option value=\"alice\">Alice</option>\n            <option value=\"bob\">Bob</option>\n            <option value=\"charlie\">Charlie</option>\n          </optgroup>\n          <optgroup label=\"Common American Fruit\">\n            <option value=\"apple\">Apple</option>\n            <option value=\"banana\">Banana</option>\n            <option value=\"grapes\">Grapes</option>\n          </optgroup>\n        </DropdownSelector>\n      </dd>\n      <dt>\n        Multiple (<code>multiple</code>)\n      </dt>\n      <dd>\n        <small>Styling options are limited and browser-dependent.</small>\n        <DropdownSelector type=\"multiple\">\n          <optgroup label=\"Cryptographic People\">\n            <option value=\"alice\">Alice</option>\n            <option value=\"bob\">Bob</option>\n            <option value=\"charlie\">Charlie</option>\n          </optgroup>\n          <optgroup label=\"Common American Fruit\">\n            <option value=\"apple\">Apple</option>\n            <option value=\"banana\">Banana</option>\n            <option value=\"grapes\">Grapes</option>\n          </optgroup>\n        </DropdownSelector>\n      </dd>\n    </dl>\n  );\n}\n\nexport default UIPatternsDropdownSelector;\n","import React from 'react';\nimport { Pill } from 'tapis-ui/_common';\n\nfunction UIPatternsPill() {\n  return (\n    <dl>\n      <dt>Default Pill (normal)</dt>\n      <dd>\n        <Pill>Example Pill</Pill>\n      </dd>\n      <dt>Normal Pill</dt>\n      <dd>\n        <Pill type=\"normal\">Normal Pill</Pill>\n      </dd>\n      <dt>Success Pill</dt>\n      <dd>\n        <Pill type=\"success\">Success Pill</Pill>\n      </dd>\n      <dt>Warning Pill</dt>\n      <dd>\n        <Pill type=\"warning\">Warning Pill</Pill>\n      </dd>\n      <dt>Danger Pill</dt>\n      <dd>\n        <Pill type=\"danger\">Danger Pill</Pill>\n      </dd>\n    </dl>\n  );\n}\n\nexport default UIPatternsPill;\n","import React from 'react';\nimport { ReadMore } from 'tapis-ui/_common';\nimport styles from './UIPatternsReadMore.module.scss';\n\nfunction UIPatternsReadMore() {\n  return (\n    <div className={styles.root}>\n      <ReadMore>\n        Long text beyond 4 lines should be clamped. Short text should not be\n        clamped. This element is responsive to line number changes due to window\n        resizing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis\n        dapibus leo ornare sem mollis viverra. Sed metus tortor, luctus vitae\n        tempus a, consectetur eu enim. Vivamus euismod ante sed augue aliquam,\n        at venenatis risus varius. Duis laoreet, tellus at euismod consequat,\n        nulla neque vestibulum sapien, at placerat erat nibh at ligula. Interdum\n        et malesuada fames ac ante ipsum primis in faucibus. Vestibulum mattis\n        elit non enim gravida tempus. Quisque et nisi ligula. Quisque sagittis\n        vel ex sed rhoncus. In lacus purus, elementum vel ullamcorper at,\n        accumsan congue sem. Morbi eu mattis magna. Donec arcu ligula, mollis ac\n        leo ut, pretium euismod turpis. Maecenas quis elit id dui vehicula\n        sagittis semper aliquet enim.\n      </ReadMore>\n    </div>\n  );\n}\n\nexport default UIPatternsReadMore;\n","import React from 'react';\nimport UIPatternsMessage from './UIPatternsMessage';\nimport UIPatternsDescriptionList from './UIPatternsDescriptionList';\nimport UIPatternsDropdownSelector from './UIPatternsDropdownSelector';\nimport UIPatternsPill from './UIPatternsPill';\nimport UIPatternsReadMore from './UIPatternsReadMore';\nimport styles from './UIPatterns.module.scss';\n\nfunction UIPatterns() {\n  return (\n    <div>\n      <div className={styles.items}>\n        <div className={styles['grid-item']}>\n          <h6>Message &amp; Notification</h6>\n          <UIPatternsMessage />\n        </div>\n        <div className={styles['grid-item']}>\n          <h6>DropdownSelector</h6>\n          <UIPatternsDropdownSelector />\n        </div>\n      </div>\n      <div className={styles.items}>\n        <div className={styles['grid-item']}>\n          <h6>DescriptionList</h6>\n          <UIPatternsDescriptionList />\n        </div>\n      </div>\n      <div className={styles.items}>\n        <div className={styles['grid-item']}>\n          <h6>Pills</h6>\n          <UIPatternsPill />\n        </div>\n      </div>\n      <div className={styles.items}>\n        <div className={styles['grid-item']}>\n          <h6>Read More</h6>\n          <UIPatternsReadMore />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UIPatterns;\n","import App from './App';\n\nexport default App;\n","import { hot } from 'react-hot-loader/root';\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { Apps, Login, Dashboard, Jobs, Systems } from 'tapis-app/Sections';\nimport { Layout } from 'tapis-app/Layout';\nimport { SectionHeader, ProtectedRoute } from 'tapis-ui/_common';\nimport { useLogin } from 'tapis-hooks/authenticator';\nimport Sidebar from '../Sidebar/Sidebar';\nimport UIPatterns from '../UIPatterns';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  const { logout } = useLogin();\n\n  const header = (\n    <div>\n      <SectionHeader className=\"tapis-ui__header\">TAPIS UI</SectionHeader>\n    </div>\n  );\n\n  const workbenchContent = (\n    <div className=\"workbench-content\">\n      <Route exact path=\"/\">\n        <Dashboard />\n      </Route>\n      <Route path=\"/login\">\n        <Login />\n      </Route>\n      <Route\n        path=\"/logout\"\n        render={() => {\n          logout();\n          return <Redirect to=\"/login\" />;\n        }}\n      />\n      <ProtectedRoute path=\"/systems\">\n        <Systems />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/apps\">\n        <Apps />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/jobs\">\n        <Jobs />\n      </ProtectedRoute>\n      <Route path=\"/uipatterns\">\n        <SectionHeader>UI Patterns</SectionHeader>\n        <UIPatterns />\n      </Route>\n    </div>\n  );\n\n  return (\n    <div style={{ display: 'flex', flexGrow: 1, height: '100vh' }}>\n      <Layout top={header} left={<Sidebar />} right={workbenchContent} />\n    </div>\n  );\n};\n\nexport default hot(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'tapis-app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom';\nimport TapisProvider from 'tapis-hooks/provider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'tapis-app/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TapisProvider basePath=\"https://tacc.tapis.io\">\n      <Router>\n        <App />\n      </Router>\n    </TapisProvider>\n  </React.StrictMode>,\n  document.getElementById('react-root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Paginator_root__1z-Ua\",\"endcap\":\"Paginator_endcap__2RO8F\",\"page-root\":\"Paginator_page-root__3Gjsi\",\"page\":\"Paginator_page__PkH6m\",\"current\":\"Paginator_current__82eHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TextCopyField_input__1fztk bootstrap_form_form-control__3JyGg\",\"copy-button\":\"TextCopyField_copy-button__IUKh4 c-button_c-button--secondary__22Cay\",\"is-copied\":\"TextCopyField_is-copied__18hMg\",\"button__icon\":\"TextCopyField_button__icon__aIDYM c-button_c-button__icon--before__2PDTf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-list\":\"Navbar_nav-list__3MPLr\",\"nav-link\":\"Navbar_nav-link__3WfXQ\",\"active\":\"Navbar_active__1wiRk\",\"nav-text\":\"Navbar_nav-text__2CNK9\",\"nav-content\":\"Navbar_nav-content__1z1nH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UIPatternsMessage_container__2KK1-\",\"is-row-end\":\"UIPatternsMessage_is-row-end__3M7kw\",\"secondary\":\"UIPatternsMessage_secondary__L-0th\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item-narrow\":\"UIPatternsDescriptionList_item-narrow__-Sesu\",\"item-x-narrow\":\"UIPatternsDescriptionList_item-x-narrow__2FhXS\",\"list-cols\":\"UIPatternsDescriptionList_list-cols__3bTVt\",\"list-rows\":\"UIPatternsDescriptionList_list-rows__1LLfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Section_root__oT5mq\",\"messages\":\"Section_messages__1MPS4\",\"header\":\"Section_header__2Nj4s\",\"content\":\"Section_content__23BLV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SectionHeader_root__2kXRe\",\"heading\":\"SectionHeader_heading__UPEP-\",\"for-form\":\"SectionHeader_for-form__2aqji\",\"for-table\":\"SectionHeader_for-table__3uH99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DescriptionList_container__3IZeA\",\"is-horz\":\"DescriptionList_is-horz__2TeOi\",\"key\":\"DescriptionList_key__2XuAI\",\"value\":\"DescriptionList_value__1nG0K\",\"is-narrow\":\"DescriptionList_is-narrow__ikNw_\",\"is-wide\":\"DescriptionList_is-wide__FobkI\",\"is-vert\":\"DescriptionList_is-vert__2JNuC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Section_body__28vwH\",\"nav\":\"Section_nav__3_o0M\",\"detail\":\"Section_detail__3UNvp\",\"sub-header\":\"Section_sub-header__1IV9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Expand_container__3sl_d\",\"summary\":\"Expand_summary__34ijc\",\"header\":\"Expand_header__25VB9\"};"],"sourceRoot":""}