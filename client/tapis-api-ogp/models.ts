/* eslint-disable */
// tslint:disable
/**
 * Tenants API
 * Manage Tapis Tenants.
 *
 * OpenAPI spec version: 1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

export namespace Api {
	/**
	 * @export
	 * @interface BasicResponse
	 */
	export interface BasicResponse {
		/**
		 * <p>Version of the API</p>
		 * @type {string}
		 * @memberof BasicResponse
		 */
		version?: string;
		/**
		 * <p>Brief description of the response</p>
		 * @type {string}
		 * @memberof BasicResponse
		 */
		message?: string;
		/**
		 * <p>Whether the request was a success or failure.</p>
		 * @type {Api.BasicResponse.StatusEnum}
		 * @memberof BasicResponse
		 */
		status?: Api.BasicResponse.StatusEnum;
	}
	
	/**
	 * @export
	 * @namespace BasicResponse
	 */
	export namespace BasicResponse {
		/**
		 * <p>Whether the request was a success or failure.</p>
		 * @export
		 * @enum {string}
		 */
		export enum StatusEnum {
			Success = 'success',
			Error = 'error'
		}
	}

	/**
	 * @export
	 * @interface CreateLdap201Response
	 */
	export interface CreateLdap201Response extends Api.BasicResponse {
		/**
		 * @type {Api.LDAP}
		 * @memberof CreateLdap201Response
		 */
		result?: Api.LDAP;
	}

	/**
	 * @export
	 * @interface CreateOwner201Response
	 */
	export interface CreateOwner201Response extends Api.BasicResponse {
		/**
		 * @type {Api.Owner}
		 * @memberof CreateOwner201Response
		 */
		result?: Api.Owner;
	}

	/**
	 * @export
	 * @interface CreateSite201Response
	 */
	export interface CreateSite201Response extends Api.BasicResponse {
		/**
		 * @type {Api.Site}
		 * @memberof CreateSite201Response
		 */
		result?: Api.Site;
	}

	/**
	 * @export
	 * @interface CreateTenant201Response
	 */
	export interface CreateTenant201Response extends Api.BasicResponse {
		/**
		 * @type {Api.Tenant}
		 * @memberof CreateTenant201Response
		 */
		result?: Api.Tenant;
	}

	/**
	 * @export
	 * @interface DeleteLdap200Response
	 */
	export interface DeleteLdap200Response extends Api.BasicResponse {
		/**
		 * @type {Api.DeleteLdap200Response.ResultEnum}
		 * @memberof DeleteLdap200Response
		 */
		result?: Api.DeleteLdap200Response.ResultEnum | null;
	}
	
	/**
	 * @export
	 * @namespace DeleteLdap200Response
	 */
	export namespace DeleteLdap200Response {
		/**
		 * @export
		 * @enum {string}
		 */
		export enum ResultEnum {
			Null = 'null'
		}
	}

	/**
	 * @export
	 * @interface DeleteOwner200Response
	 */
	export interface DeleteOwner200Response extends Api.BasicResponse {
		/**
		 * @type {Api.DeleteOwner200Response.ResultEnum}
		 * @memberof DeleteOwner200Response
		 */
		result?: Api.DeleteOwner200Response.ResultEnum | null;
	}
	
	/**
	 * @export
	 * @namespace DeleteOwner200Response
	 */
	export namespace DeleteOwner200Response {
		/**
		 * @export
		 * @enum {string}
		 */
		export enum ResultEnum {
			Null = 'null'
		}
	}

	/**
	 * @export
	 * @interface DeleteSite200Response
	 */
	export interface DeleteSite200Response extends Api.BasicResponse {
		/**
		 * @type {Api.DeleteSite200Response.ResultEnum}
		 * @memberof DeleteSite200Response
		 */
		result?: Api.DeleteSite200Response.ResultEnum | null;
	}
	
	/**
	 * @export
	 * @namespace DeleteSite200Response
	 */
	export namespace DeleteSite200Response {
		/**
		 * @export
		 * @enum {string}
		 */
		export enum ResultEnum {
			Null = 'null'
		}
	}

	/**
	 * @export
	 * @interface DeleteTenant200Response
	 */
	export interface DeleteTenant200Response extends Api.BasicResponse {
		/**
		 * @type {Api.DeleteTenant200Response.ResultEnum}
		 * @memberof DeleteTenant200Response
		 */
		result?: Api.DeleteTenant200Response.ResultEnum | null;
	}
	
	/**
	 * @export
	 * @namespace DeleteTenant200Response
	 */
	export namespace DeleteTenant200Response {
		/**
		 * @export
		 * @enum {string}
		 */
		export enum ResultEnum {
			Null = 'null'
		}
	}

	/**
	 * @export
	 * @interface GetLdap200Response
	 */
	export interface GetLdap200Response extends Api.BasicResponse {
		/**
		 * @type {Api.LDAP}
		 * @memberof GetLdap200Response
		 */
		result?: Api.LDAP;
	}

	/**
	 * @export
	 * @interface GetOwner200Response
	 */
	export interface GetOwner200Response extends Api.BasicResponse {
		/**
		 * @type {Api.Owner}
		 * @memberof GetOwner200Response
		 */
		result?: Api.Owner;
	}

	/**
	 * @export
	 * @interface GetSite200Response
	 */
	export interface GetSite200Response extends Api.BasicResponse {
		/**
		 * @type {Api.Site}
		 * @memberof GetSite200Response
		 */
		result?: Api.Site;
	}

	/**
	 * @export
	 * @interface GetTenant200Response
	 */
	export interface GetTenant200Response extends Api.BasicResponse {
		/**
		 * @type {Api.Tenant}
		 * @memberof GetTenant200Response
		 */
		result?: Api.Tenant;
	}

	/**
	 * @export
	 * @interface LDAP
	 */
	export interface LDAP {
		/**
		 * <p>Unique id for the LDAP object.</p>
		 * @type {string}
		 * @memberof LDAP
		 */
		ldap_id?: string;
		/**
		 * <p>url to the LDAP</p>
		 * @type {string}
		 * @memberof LDAP
		 */
		url?: string;
		/**
		 * <p>port for the LDAP</p>
		 * @type {number}
		 * @memberof LDAP
		 */
		port?: number;
		/**
		 * <p>Whether to use SSL with the LDAP</p>
		 * @type {boolean}
		 * @memberof LDAP
		 */
		use_ssl?: boolean;
		/**
		 * <p>base DN for users</p>
		 * @type {string}
		 * @memberof LDAP
		 */
		user_dn?: string;
		/**
		 * <p>DN used for binding to the LDAP.</p>
		 * @type {string}
		 * @memberof LDAP
		 */
		bind_dn?: string;
		/**
		 * <p>Pointed to a Tapis credential for binding to the LDAP.</p>
		 * @type {string}
		 * @memberof LDAP
		 */
		bind_credential?: string;
		/**
		 * <p>Whether this LDAP is used for service accounts or user accounts.</p>
		 * @type {Api.LDAP.AccountTypeEnum}
		 * @memberof LDAP
		 */
		account_type?: Api.LDAP.AccountTypeEnum;
		/**
		 * <p>The time the client was created.</p>
		 * @type {string}
		 * @memberof LDAP
		 */
		create_time?: string;
		/**
		 * <p>The time the client was last updated.</p>
		 * @type {string}
		 * @memberof LDAP
		 */
		last_update_time?: string;
	}
	
	/**
	 * @export
	 * @namespace LDAP
	 */
	export namespace LDAP {
		/**
		 * <p>Whether this LDAP is used for service accounts or user accounts.</p>
		 * @export
		 * @enum {string}
		 */
		export enum AccountTypeEnum {
			Service = 'service',
			User = 'user'
		}
	}

	/**
	 * @export
	 * @interface ListLdaps200Response
	 */
	export interface ListLdaps200Response extends Api.BasicResponse {
		/**
		 * @type {Api.LDAP[]}
		 * @memberof ListLdaps200Response
		 */
		result?: Api.LDAP[];
	}

	/**
	 * @export
	 * @interface ListOwners200Response
	 */
	export interface ListOwners200Response extends Api.BasicResponse {
		/**
		 * @type {Api.Owner[]}
		 * @memberof ListOwners200Response
		 */
		result?: Api.Owner[];
	}

	/**
	 * @export
	 * @interface ListSites200Response
	 */
	export interface ListSites200Response extends Api.BasicResponse {
		/**
		 * @type {Api.Site[]}
		 * @memberof ListSites200Response
		 */
		result?: Api.Site[];
	}

	/**
	 * @export
	 * @interface ListTenants200Response
	 */
	export interface ListTenants200Response extends Api.BasicResponse {
		/**
		 * @type {Api.Tenant[]}
		 * @memberof ListTenants200Response
		 */
		result?: Api.Tenant[];
	}

	/**
	 * @export
	 * @interface NewLDAP
	 */
	export interface NewLDAP {
		/**
		 * <p>Unique id for the LDAP object.</p>
		 * @type {string}
		 * @memberof NewLDAP
		 */
		ldap_id: string;
		/**
		 * <p>url to the LDAP</p>
		 * @type {string}
		 * @memberof NewLDAP
		 */
		url: string;
		/**
		 * <p>port for the LDAP</p>
		 * @type {number}
		 * @memberof NewLDAP
		 */
		port: number;
		/**
		 * <p>Whether to use SSL with the LDAP</p>
		 * @type {boolean}
		 * @memberof NewLDAP
		 */
		use_ssl: boolean;
		/**
		 * <p>base DN for users</p>
		 * @type {string}
		 * @memberof NewLDAP
		 */
		user_dn: string;
		/**
		 * <p>DN used for binding to the LDAP.</p>
		 * @type {string}
		 * @memberof NewLDAP
		 */
		bind_dn: string;
		/**
		 * <p>Pointed to a Tapis credential for binding to the LDAP.</p>
		 * @type {string}
		 * @memberof NewLDAP
		 */
		bind_credential: string;
		/**
		 * <p>Whether this LDAP is used for service accounts or user accounts.</p>
		 * @type {Api.NewLDAP.AccountTypeEnum}
		 * @memberof NewLDAP
		 */
		account_type: Api.NewLDAP.AccountTypeEnum;
	}
	
	/**
	 * @export
	 * @namespace NewLDAP
	 */
	export namespace NewLDAP {
		/**
		 * <p>Whether this LDAP is used for service accounts or user accounts.</p>
		 * @export
		 * @enum {string}
		 */
		export enum AccountTypeEnum {
			Service = 'service',
			User = 'user'
		}
	}

	/**
	 * @export
	 * @interface NewSite
	 */
	export interface NewSite {
		/**
		 * <p>The unique identifier for the site.</p>
		 * @type {string}
		 * @memberof NewSite
		 */
		site_id: string;
		/**
		 * <p>The base URL for the site.</p>
		 * @type {string}
		 * @memberof NewSite
		 */
		base_url: string;
		/**
		 * <p>Whether the site is the primary site.</p>
		 * @type {boolean}
		 * @memberof NewSite
		 */
		primary: boolean;
		/**
		 * <p>The list of services for this site.</p>
		 * @type {string[]}
		 * @memberof NewSite
		 */
		services: string[];
		/**
		 * <p>For primary site only; The template string represening the base URL for a tenant.</p>
		 * @type {string}
		 * @memberof NewSite
		 */
		tenant_base_url_template?: string;
		/**
		 * <p>Tenant ID of this site&#39;s tenant.</p>
		 * @type {string}
		 * @memberof NewSite
		 */
		site_admin_tenant_id: string;
	}

	/**
	 * @export
	 * @interface NewTenant
	 */
	export interface NewTenant {
		/**
		 * <p>The unique identifier for the tenant.</p>
		 * @type {string}
		 * @memberof NewTenant
		 */
		tenant_id: string;
		/**
		 * <p>The base URL for the tenant.</p>
		 * @type {string}
		 * @memberof NewTenant
		 */
		base_url: string;
		/**
		 * <p>The site for which the tenant belongs.</p>
		 * @type {string}
		 * @memberof NewTenant
		 */
		site_id: string;
		/**
		 * <p>The resolvable location of the token service for the tenant.</p>
		 * @type {string}
		 * @memberof NewTenant
		 */
		token_service: string;
		/**
		 * <p>The resolvable location of the security kernel for the tenant.</p>
		 * @type {string}
		 * @memberof NewTenant
		 */
		security_kernel: string;
		/**
		 * <p>The resolvable location of the authenticator for the tenant.</p>
		 * @type {string}
		 * @memberof NewTenant
		 */
		authenticator: string;
		/**
		 * <p>The email address of the primary owner and contact for the tenant.</p>
		 * @type {string}
		 * @memberof NewTenant
		 */
		owner: string;
		/**
		 * <p>The username of the user that is automatically assigned the tenant_admin role by the Security Kernel.</p>
		 * @type {string}
		 * @memberof NewTenant
		 */
		admin_user: string;
		/**
		 * <p>The list of services that are automatically granted the token_generator role for this tenant by the Security Kernel.</p>
		 * @type {string[]}
		 * @memberof NewTenant
		 */
		token_gen_services: string[];
		/**
		 * <p>The unique identifier for the LDAP object for service accounts in the tenant.</p>
		 * @type {string}
		 * @memberof NewTenant
		 */
		service_ldap_connection_id?: string;
		/**
		 * <p>The unique identifier for the LDAP object for user accounts in the tenant.</p>
		 * @type {string}
		 * @memberof NewTenant
		 */
		user_ldap_connection_id?: string;
		/**
		 * <p>A description of the tenant.</p>
		 * @type {string}
		 * @memberof NewTenant
		 */
		description?: string;
	}

	/**
	 * @export
	 * @interface Owner
	 */
	export interface Owner {
		/**
		 * <p>Full name of the owner.</p>
		 * @type {string}
		 * @memberof Owner
		 */
		name: string;
		/**
		 * <p>Email address for the owner.</p>
		 * @type {string}
		 * @memberof Owner
		 */
		email: string;
		/**
		 * <p>The owner&#39;s institution.</p>
		 * @type {string}
		 * @memberof Owner
		 */
		institution: string;
		/**
		 * <p>The time the client was created.</p>
		 * @type {string}
		 * @memberof Owner
		 */
		create_time?: string;
		/**
		 * <p>The time the client was last updated.</p>
		 * @type {string}
		 * @memberof Owner
		 */
		last_update_time?: string;
	}

	/**
	 * @export
	 * @interface Site
	 */
	export interface Site {
		/**
		 * <p>The unique identifier for the site.</p>
		 * @type {string}
		 * @memberof Site
		 */
		site_id: string;
		/**
		 * <p>The base URL for the site.</p>
		 * @type {string}
		 * @memberof Site
		 */
		base_url?: string;
		/**
		 * <p>Whether the site is the primary site.</p>
		 * @type {boolean}
		 * @memberof Site
		 */
		primary?: boolean;
		/**
		 * <p>The list of services for this site.</p>
		 * @type {string[]}
		 * @memberof Site
		 */
		services: string[];
		/**
		 * <p>The tenant base url template.</p>
		 * @type {string}
		 * @memberof Site
		 */
		tenant_base_url_template?: string;
		/**
		 * <p>Tenant ID of this site&#39;s tenant.</p>
		 * @type {string}
		 * @memberof Site
		 */
		site_admin_tenant_id: string;
	}

	/**
	 * @export
	 * @interface Tenant
	 */
	export interface Tenant {
		/**
		 * <p>The unique identifier for the tenant.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		tenant_id: string;
		/**
		 * <p>The base URL for the tenant.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		base_url: string;
		/**
		 * <p>The site for which the tenant belongs.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		site_id: string;
		/**
		 * <p>The resolvable location of the token service for the tenant.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		token_service: string;
		/**
		 * <p>The resolvable location of the security kernel for the tenant.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		security_kernel: string;
		/**
		 * <p>The resolvable location of the authenticator for the tenant.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		authenticator: string;
		/**
		 * <p>The email address of the primary owner and contact for the tenant.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		owner: string;
		/**
		 * <p>The username of the user that is automatically assigned the tenant_admin role by the Security Kernel.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		admin_user?: string;
		/**
		 * <p>The list of services that are automatically granted the token_generator role for this tenant by the Security Kernel.</p>
		 * @type {string[]}
		 * @memberof Tenant
		 */
		token_gen_services?: string[];
		/**
		 * <p>The unique identifier for the LDAP object for service accounts in the tenant.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		service_ldap_connection_id?: string;
		/**
		 * <p>The unique identifier for the LDAP object for user accounts in the tenant.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		user_ldap_connection_id?: string;
		/**
		 * <p>The public key that should be used to validate the signatures of JWTs associated with the tenant.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		public_key?: string;
		/**
		 * <p>A description of the tenant.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		description?: string;
		/**
		 * <p>The time the client was created.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		create_time?: string;
		/**
		 * <p>The time the client was last updated.</p>
		 * @type {string}
		 * @memberof Tenant
		 */
		last_update_time?: string;
	}

}
